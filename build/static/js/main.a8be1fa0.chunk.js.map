{"version":3,"sources":["actions/AuthActions.js","actions/FetchUserDataActions.js","actions/NotificationsAction.js","actions/ToggelActions.js","actions/index.js","reducers/AuthReducer.js","reducers/ProfileReducer.js","reducers/ReposReducer.js","reducers/OrgsReducer.js","reducers/NotificationsReducer.js","reducers/NotificationsLengthReducer.js","reducers/ToggelReducer.js","reducers/SubscriptionReducer.js","reducers/index.js","config/store.js","components/Main.style.js","components/Main.js","components/Navbar/Navbar.style.js","components/Navbar/Navbar.js","components/RepoList/RepoList.Style.js","components/RepoList/RepoList.js","components/OrgsList/OrgsList.style.js","components/OrgsList/OrgsList.js","components/Notifications/Notifications.style.js","components/Notifications/Notifications.js","components/SubscriptionList/SubscriptionList.style.js","components/SubscriptionList/SubscriptionList.js","components/Profile/Profile.style.js","components/Profile/Profile.js","components/Spinner/Spinner.js","components/Dashboard/Dashboard.style.js","components/Dashboard/Dashboard.js","components/NotFound/NotFound.js","App.js","index.js","config/firebase.js","utils/firebaseHelpers.js","actions/types.js","config/history.js","utils/helpers.js"],"names":["__webpack_require__","d","__webpack_exports__","checkIfUserIsLoggedIn","signInUser","signOutUser","firebase__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","_utils_helpers__WEBPACK_IMPORTED_MODULE_2__","_config_firebase__WEBPACK_IMPORTED_MODULE_3__","_config_history__WEBPACK_IMPORTED_MODULE_4__","dispatch","firebase","auth","onAuthStateChanged","user","window","localStorage","setItem","providerData","uid","saveGithubIDToFireStore","type","LOGGED_IN_SUCCES","payload","history","push","SIGN_OUT","userData","provider","Firebase","GithubAuthProvider","addScope","signInWithPopup","then","result","accessToken","credential","setGitHubToken","catch","error","errorCode","errorMessage","console","log","concat","signOut","fetchUserDataFromGithubAPI","_ref","Object","_Users_carleinarsson_Desktop_ce222qw_examination_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_carleinarsson_Desktop_ce222qw_examination_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","t0","getGitHubToken","t1","sent","t2","t3","Authorization","t4","headers","t5","response","json","t6","githubUserProfileData","GET_USER_PROFILE_DATA","fetch","call","stop","_x","apply","this","arguments","fetchOrgsDataGithubAPI","adminReposInOrg","currentLoggedInUserFirestoreReference","onSnapshot","doc","exists","data","orgs","org","key","GET_ORGS_DATA","fetchReposDataGithubAPI","reposArray","repos","repo","GET_REPOS_DATA","filter","admin","fetchReposInOrg","reposInOrgsArray","reposInOrgs","owner","name","GET_REPOS_IN_ORGS","fetchSubscriptions","subscriptionArray","subscriptions","subscription","GET_SUBSCRIPTIONS","fetchNotifications","notificationsArray","notifications","forEach","notification","notificationObject","title","body","createdBy","header","avatar","repositoryName","time","action","FETCH_NOTIFICATIONS","reverse","FETCH_NOTIFICATIONS_LENGTH","clearNotification","showNotification","showRepositories","showOrganizations","showProfile","showSubscriptions","_types__WEBPACK_IMPORTED_MODULE_0__","SHOW_NOTIFICATIONS","SHOW_REPOSITORIES","SHOW_ORGANIZATION","SHOW_PROFILE","SHOW_SUBSCRIPTIONS","_AuthActions__WEBPACK_IMPORTED_MODULE_0__","_FetchUserDataActions__WEBPACK_IMPORTED_MODULE_1__","_SubscriptionActions__WEBPACK_IMPORTED_MODULE_2__","o","_NotificationsAction__WEBPACK_IMPORTED_MODULE_3__","_ToggelActions__WEBPACK_IMPORTED_MODULE_4__","initialState","isAuthenticated","showNotifications","showOrganization","showSubscription","combineReducers","state","length","undefined","objectSpread","profile","notificationLength","toggel","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","styles","containerStyle","marginTop","textAlign","width","root","maxWidth","text","fontSize","color","underText","marginBottom","Main","signInAttempt","_this","props","classes","react_default","createElement","className","Typography_default","component","variant","gutterBottom","Button_default","onClick","size","React","Component","connect","withStyles","flexGrow","grow","ButtonContainer","navbarColor","backgroundColor","Navbar","signOutAttempt","toggelProfile","toggelRepositories","toggelOrganizations","toggelSubscriptions","toggelNotification","prop","updateNotifications","_this2","AppBar_default","position","Toolbar_default","Badge_default","margin","badgeContent","notificationsLength","Mail_default","_","map","val","display","justifyContent","overflow","gridList","height","button","marginRight","headerText","hrContainer","flexWrap","RepoList","turnOffNotification","deleteWebhook","turnOnNotification","addWebhook","renderButton","active","GridList_default","cellHeight","GridListTile_default","cols","style","ListSubheader_default","id","src","avatarURL","alt","GridListTileBar_default","subtitle","actionIcon","backButton","viewReposInOrg","renderOrgs","deleteHook","reposURL","reposInOrgss","checkWhichAvatarToRender","avatarIMG","url","Button","delete","Notifications","clearNotifications","renderIfNotification","container","headline","Tooltip_default","IconButton_default","aria-label","Delete_default","List_default","ListItem_default","Avatar_default","ListItemText_default","primary","secondary","slice","SubscriptionList","githubStatsContainer","flex","underlineContainer","alignSelf","paddingRight","marginLeft","numberText","Profile","login","total_private_repos","public_repos","followers","theme","progress","spacing","unit","CircularProgress_default","alignItems","spinner","Dashboard","toggelComponentToRender","components_Notifications_Notifications","components_RepoList_RepoList","OrgsList","components_SubscriptionList_SubscriptionList","components_Profile_Profile","allowNotifications","saveReposToFireStore","saveOrgsToFireStore","entries","constructor","Spinner_Spinner","components_Navbar_Navbar","NotFound","App","es","Router","Switch","Route","exact","path","navigator","serviceWorker","register","registration","scope","err","ReactDOM","render","src_App","document","getElementById","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","keys","i","k","reposObject","hooks_url","permissions","avatar_url","collection","getCurrentLoggedInGithubID","set","merge","saveReposInOrgsToFireStore","_ref2","_callee2","orgName","_context2","t7","reposInOrgObject","_ref3","_callee4","_context4","_ref4","_callee3","orgsObject","_context3","repos_url","_x2","updateReposInOrgs","activeStatus","update","obj","hooksID","updateRepos","element","history_createBrowserHistory__WEBPACK_IMPORTED_MODULE_0__","history_createBrowserHistory__WEBPACK_IMPORTED_MODULE_0___default","n","createHistory","messaging","getItem","githubID","userID","requestPermission","getToken","token","msgToken","get","abrupt","githubParameters","events","config","currentUser","content_type","JSON","stringify","Content-Type","method","t8","t9"],"mappings":"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","file":"static/js/main.a8be1fa0.chunk.js","sourcesContent":["import * as Firebase from 'firebase'\nimport { LOGGED_IN_SUCCES, SIGN_OUT } from './types'\nimport { setGitHubToken, saveGithubIDToFireStore } from '../utils/helpers'\nimport firebase from '../config/firebase'\nimport history from '../config/history'\n\n/* \nCheck if user is logged in, if a user exist display dashboard else loginpage\n*/\n\nexport const checkIfUserIsLoggedIn = () => dispatch => {\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      window.localStorage.setItem('loggedInUser', user.providerData[0].uid)\n      saveGithubIDToFireStore(user.providerData[0].uid)\n      dispatch({ type: LOGGED_IN_SUCCES, payload: true })\n      history.push('/dashboard')\n    } else {\n      dispatch({ type: SIGN_OUT, payload: false })\n    }\n  })\n}\n\n/* \nSign in a user with firebase Oauth\nOpens popup window, if success token will be retrived\n*/\n\nexport const signInUser = userData => dispatch => {\n  const provider = new Firebase.auth.GithubAuthProvider()\n\n  provider.addScope('user')\n  provider.addScope('repo')\n\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(function (result) {\n      const { accessToken } = result.credential\n      setGitHubToken(accessToken)\n      dispatch({ type: LOGGED_IN_SUCCES, payload: true })\n      history.push('/dashboard')\n    })\n    .catch(function (error) {\n      const { errorCode, errorMessage } = error\n      console.log(\n        `Something went wrong please check your credentials or try again. error message : ${errorMessage} - ${errorCode}`\n      )\n    })\n}\n\n/* \nSign out user and display loginpage\n*/\n\nexport const signOutUser = userData => dispatch => {\n  firebase\n    .auth()\n    .signOut()\n    .then(() => {\n      dispatch({ type: SIGN_OUT, payload: false })\n      history.push('/')\n    })\n    .catch(function (error) {\n      console.log(`error accurred${error}`)\n    })\n}\n","import { GET_USER_PROFILE_DATA, GET_REPOS_DATA, GET_ORGS_DATA, GET_REPOS_IN_ORGS, GET_SUBSCRIPTIONS } from './types'\nimport { getGitHubToken, currentLoggedInUserFirestoreReference } from '../utils/helpers'\n\n/* \nRetrieve github repositories from authenticated user and saves it as objects to firestore under field \"repos\"\n*/\n\nexport const fetchUserDataFromGithubAPI = () => {\n  return async (dispatch) => {\n    window\n      .fetch('https://api.github.com/user', {\n        headers: { Authorization: 'token ' + await getGitHubToken() }\n      })\n      .then((response) => response.json())\n      .then((githubUserProfileData) => {\n        dispatch({ type: GET_USER_PROFILE_DATA, payload: githubUserProfileData })\n      })\n  }\n}\n\n/* \n  Fetches all organizations in realtime from authenticated users firestore & update the state with the new data\n*/\n\nexport const fetchOrgsDataGithubAPI = () => {\n  let adminReposInOrg = []\n\n  return (dispatch) => {\n\n    currentLoggedInUserFirestoreReference().onSnapshot(function (doc) {\n      if (doc.exists && doc.data().orgs) {\n        let org = doc.data().orgs\n        for (let key in org) {\n          adminReposInOrg.push(org[key])\n        }\n      }\n\n      dispatch({ type: GET_ORGS_DATA, payload: adminReposInOrg })\n      adminReposInOrg = []\n    })\n  }\n}\n\n/* \n  Fetches all repositories in realtime from authenticated users firestore & update the state with the new data\n*/\n\nexport const fetchReposDataGithubAPI = () => {\n  let reposArray = []\n\n  return (dispatch) => {\n    currentLoggedInUserFirestoreReference().onSnapshot(function (doc) {\n      if (doc.exists && doc.data().repos) {\n\n        let repo = doc.data().repos\n\n        for (let key in repo) {\n          reposArray.push(repo[key])\n        }\n      }\n\n      dispatch({ type: GET_REPOS_DATA, payload: reposArray.filter(repo => repo.admin === true) })\n      reposArray = []\n    })\n  }\n}\n\n/* \n  Fetches all repositories in organizations in realtime from the authenticated users firestore & update the state with the new data\n*/\n\nexport const fetchReposInOrg = (org) => {\n  let reposInOrgsArray = []\n\n  return (dispatch) => {\n    currentLoggedInUserFirestoreReference().onSnapshot(function (doc) {\n      if (doc.exists && doc.data().reposInOrgs) {\n        let repo = doc.data().reposInOrgs\n        for (let key in repo) {\n          if (repo[key].owner === org.name) {\n            reposInOrgsArray.push(repo[key])\n          }\n        }\n      }\n\n      dispatch({ type: GET_REPOS_IN_ORGS, payload: reposInOrgsArray })\n      reposInOrgsArray = []\n    })\n  }\n}\n\n/* \n  Fetches all subscription in realtime from authenticated users firestore & update the state with the new data\n*/\n\nexport const fetchSubscriptions = () => {\n  let subscriptionArray = []\n\n  return (dispatch) => {\n    currentLoggedInUserFirestoreReference().onSnapshot(function (doc) {\n      if (doc.exists && doc.data().subscriptions) {\n        let subscription = doc.data().subscriptions\n        for (let key in subscription) {\n          subscriptionArray.push(subscription[key])\n        }\n      }\n\n      dispatch({ type: GET_SUBSCRIPTIONS, payload: subscriptionArray })\n      subscriptionArray = []\n    })\n  }\n}\n\n","import { FETCH_NOTIFICATIONS, FETCH_NOTIFICATIONS_LENGTH } from './types'\nimport { currentLoggedInUserFirestoreReference } from '../utils/helpers'\n\n/* \n  Fetches all notifications in realtime from authenticated users firestore & update the state with the new data\n*/\n\nexport const fetchNotifications = () => {\n  var notificationsArray = []\n  return async (dispatch) => {\n    await currentLoggedInUserFirestoreReference().onSnapshot(function (doc) {\n      if (doc.exists && doc.data().notifications) {\n        let notifications = doc.data().notifications\n\n        notifications.forEach(notification => {\n          let notificationObject = {}\n          if (notification.notification.type === 'issue') {\n            notificationObject.title = notification.notification.title\n            notificationObject.body = notification.notification.body\n            notificationObject.createdBy = notification.notification.header + notification.notification.type\n            notificationObject.avatar = notification.notification.avatar\n            notificationObject.repositoryName = notification.notification.repositoryName\n            notificationObject.time = notification.notification.time\n          } else {\n            notificationObject.title = notification.notification.type\n            notificationObject.body = notification.notification.body\n            notificationObject.createdBy = notification.notification.title + ' ' + notification.notification.action\n            notificationObject.avatar = notification.notification.avatar\n            notificationObject.repositoryName = notification.notification.repositoryName\n            notificationObject.time = notification.notification.time\n          }\n\n          notificationsArray.push(notificationObject)\n        })\n        dispatch({ type: FETCH_NOTIFICATIONS, payload: notificationsArray.reverse() })\n        dispatch({ type: FETCH_NOTIFICATIONS_LENGTH, payload: notificationsArray.reverse() })\n\n        notificationsArray = []\n      }\n    })\n  }\n}\n\nexport const clearNotification = () => {\n\n  return (dispatch) => {\n    let notificationsArray = []\n    dispatch({ type: FETCH_NOTIFICATIONS_LENGTH, payload: notificationsArray.reverse() })\n  }\n}","import { SHOW_NOTIFICATIONS, SHOW_REPOSITORIES, SHOW_ORGANIZATION, SHOW_PROFILE, SHOW_SUBSCRIPTIONS } from './types'\n\nexport const showNotification = () => {\n  return (dispatch) => {\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: true })\n  }\n}\n\nexport const showRepositories = () => {\n  return (dispatch) => {\n    dispatch({ type: SHOW_REPOSITORIES, payload: true })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n  }\n}\n\nexport const showOrganizations = () => {\n  return (dispatch) => {\n    dispatch({ type: SHOW_REPOSITORIES, payload: false })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n    dispatch({ type: SHOW_ORGANIZATION, payload: true })\n  }\n}\n\nexport const showProfile = () => {\n  return (dispatch) => {\n    dispatch({ type: SHOW_PROFILE, payload: true })\n    dispatch({ type: SHOW_REPOSITORIES, payload: false })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n    dispatch({ type: SHOW_ORGANIZATION, payload: false })\n    dispatch({ type: SHOW_SUBSCRIPTIONS, payload: false })\n  }\n}\n\nexport const showSubscriptions = () => {\n  return (dispatch) => {\n    dispatch({ type: SHOW_SUBSCRIPTIONS, payload: true })\n    dispatch({ type: SHOW_PROFILE, payload: false })\n    dispatch({ type: SHOW_REPOSITORIES, payload: false })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n    dispatch({ type: SHOW_ORGANIZATION, payload: false })\n  }\n}\n\n","/*\nAction Creators\n*/\n\nexport * from './AuthActions'\nexport * from './FetchUserDataActions'\nexport * from './SubscriptionActions'\nexport * from './NotificationsAction'\nexport * from './ToggelActions'\n","import { LOGGED_IN_SUCCES, SIGN_OUT } from '../actions/types'\n\nconst initialState = {\n  isAuthenticated: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOGGED_IN_SUCCES:\n      return {\n        ...state,\n        isAuthenticated: true\n      }\n\n    case SIGN_OUT:\n      return {\n        ...state,\n        isAuthenticated: false\n      }\n\n    default:\n      return state\n  }\n}\n","import { GET_USER_PROFILE_DATA } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_USER_PROFILE_DATA:\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","import { GET_REPOS_DATA } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_REPOS_DATA:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import { GET_ORGS_DATA, GET_REPOS_IN_ORGS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ORGS_DATA:\n      return action.payload\n\n    case GET_REPOS_IN_ORGS:\n      console.log(action.payload)\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","import { FETCH_NOTIFICATIONS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_NOTIFICATIONS:\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","import { FETCH_NOTIFICATIONS_LENGTH } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case FETCH_NOTIFICATIONS_LENGTH:\n            return action.payload\n        default:\n            return state\n    }\n}\n","import { SHOW_NOTIFICATIONS, SHOW_REPOSITORIES, SHOW_ORGANIZATION, SHOW_PROFILE, SHOW_SUBSCRIPTIONS } from '../actions/types'\n\nconst initialState = {\n  showNotifications: false,\n  showRepositories: false,\n  showOrganization: false,\n  showSubscription: false,\n  showProfile: true\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SHOW_NOTIFICATIONS:\n      return {\n        ...state,\n        showNotifications: action.payload\n      }\n\n    case SHOW_REPOSITORIES:\n      return {\n        ...state,\n        showRepositories: action.payload\n      }\n\n    case SHOW_ORGANIZATION:\n      return {\n        ...state,\n        showOrganization: action.payload\n      }\n\n    case SHOW_PROFILE:\n      return {\n        ...state,\n        showProfile: action.payload\n      }\n\n      case SHOW_SUBSCRIPTIONS:\n      return {\n        ...state,\n        showSubscription: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n","import { GET_SUBSCRIPTIONS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_SUBSCRIPTIONS:\n            return action.payload\n\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport authReducer from './AuthReducer'\nimport profileReducer from './ProfileReducer'\nimport reposReducer from './ReposReducer'\nimport orgsReducer from './OrgsReducer'\nimport notificationsReducer from './NotificationsReducer'\nimport notificationsLengthReducer from './NotificationsLengthReducer'\nimport toggelReducers from './ToggelReducer'\nimport subscriptionReducers from './SubscriptionReducer'\n\nexport default combineReducers({\n  auth: authReducer,\n  profile: profileReducer,\n  repos: reposReducer,\n  orgs: orgsReducer,\n  notification: notificationsReducer,\n  notificationLength: notificationsLengthReducer,\n  toggel: toggelReducers,\n  subscription: subscriptionReducers\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers/index'\nconst middleware = [ thunk ]\nconst initialState = {}\n\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)))\n\nexport default store\n","const styles = {\n  containerStyle: {\n    marginTop: '20%',\n    textAlign: 'center',\n    width: '100%'\n  },\n  root: {\n    width: '100%',\n    maxWidth: 500\n  },\n  text: {\n    fontSize: 100,\n    color: 'black',\n    textAlign: 'center'\n  },\n  underText: {\n    marginBottom: '2%'\n  }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { signInUser, checkIfUserIsLoggedIn } from '../actions';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './Main.style';\n\nclass Main extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.checkIfUserIsLoggedIn()\n\t}\n\n\tsignInAttempt = () => {\n\t\tthis.props.signInUser()\n\t}\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.containerStyle}>\n\t\t\t\t<Typography component=\"h2\" variant=\"h2\" gutterBottom>\n\t\t\t\t\tWelcome To Guthub Dashboard\n\t\t\t\t</Typography>\n\t\t\t\t<Typography className={classes.underText} component=\"h2\" variant=\"overline\" gutterBottom>\n\t\t\t\tnever miss a commit or issue again  \n\n\t\t\t</Typography>\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={this.signInAttempt} color=\"primary\" size=\"large\" variant=\"outlined\">\n\t\t\t\t\t\tLog in{' '}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nMain.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default connect(null, { signInUser, checkIfUserIsLoggedIn })(withStyles(styles)(Main));\n","const styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n\n  },\n\n  ButtonContainer: {\n    textAlign: 'right',\n    flexGrow: 1\n\n  },\n  navbarColor: {\n    backgroundColor: '#76427A'\n  }\n}\n\nexport default styles\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { signOutUser, showRepositories, showNotification, showOrganizations, showProfile, showSubscriptions, clearNotification } from '../../actions';\nimport { updateNotifications } from '../../utils/firebaseHelpers'\nimport _ from 'lodash';\n\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './Navbar.style';\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\n\nclass Navbar extends Component {\n\n\tsignOutAttempt = () => {\n\t\tthis.props.signOutUser();\n\t};\n\n\ttoggelProfile = () => {\n\t\tthis.props.showProfile()\n\t}\n\n\ttoggelRepositories = () => {\n\t\tthis.props.showRepositories();\n\t};\n\n\ttoggelOrganizations = () => {\n\t\tthis.props.showOrganizations();\n\t};\n\n\ttoggelSubscriptions = () => {\n\t\tthis.props.showSubscriptions();\n\t};\n\n\ttoggelNotification = (prop) => {\n\t\tthis.props.showNotification()\n\t\tupdateNotifications(prop)\n\t\tthis.props.clearNotification()\n\t}\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<AppBar color=\"primary\" className={classes.navbarColor} position=\"static\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Typography className={classes.grow} variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\tGithub Dashboard\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className={classes.ButtonContainer}>\n\t\t\t\t\t\t\t<Button onClick={this.toggelProfile} color=\"inherit\">\n\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.toggelOrganizations} color=\"inherit\">\n\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\tOrganizations\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.toggelRepositories} color=\"inherit\">\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\tRepositories\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t<Button onClick={this.toggelSubscriptions} color=\"inherit\">\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\tMy Subscriptions\n\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={() => this.toggelNotification(this.props)} color=\"inherit\">\n\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\tclassName={classes.margin}\n\t\t\t\t\t\t\t\t\tbadgeContent={this.props.notificationsLength.length}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MailIcon />\n\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.signOutAttempt} color=\"inherit\">\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\tSign out\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nNavbar.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst notificationsLength = _.map(state.notificationLength, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { notificationsLength };\n};\n\nexport default connect(mapStateToProps, {\n\tsignOutUser,\n\tshowRepositories,\n\tshowNotification,\n\tshowOrganizations,\n\tshowSubscriptions,\n\tshowProfile,\n\tclearNotification\n})(withStyles(styles)(Navbar));\n","const styles = {\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  gridList: {\n    width: 800,\n    height: 750\n  },\n  button: {\n    backgroundColor: '#FFF',\n    marginRight: 20\n  },\n  headerText: {\n    textAlign: 'center',\n    marginTop: '10%',\n    marginBottom: '10%'\n  },\n  hrContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    marginTop: 300\n\n  }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addWebhook, deleteWebhook } from '../../utils/helpers'\nimport _ from 'lodash';\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListHeader from '@material-ui/core/ListSubheader';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// Styles\nimport styles from './RepoList.Style';\n\nclass RepoList extends React.Component {\n\n\tturnOffNotification = (repo) => {\n\t\tdeleteWebhook(repo)\n\t};\n\n\tturnOnNotification = (repo) => {\n\t\taddWebhook(repo);\n\t};\n\n\trenderButton = (repos, classes) => {\n\t\tif (repos.active) {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.turnOffNotification(repos)}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\tUnsubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.turnOnNotification(repos)}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\tSubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<GridList cellHeight={180} className={classes.gridList}>\n\t\t\t\t\t<GridListTile key=\"header\" cols={2} style={{ height: 'auto' }}>\n\t\t\t\t\t\t<ListHeader  component=\"div\">\n\t\t\t\t\t\t\t<div className={classes.hrContainer}>\n\t\t\t\t\t\t\t\t<Typography className={classes.headerText} variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\t\t\tGithub Repositories\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ListHeader>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t\t{this.props.repos.map((repos) => (\n\t\t\t\t\t\t<GridListTile key={repos.id}>\n\t\t\t\t\t\t\t<img src={repos.avatarURL} alt={repos.name} />\n\t\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\t\ttitle={repos.name}\n\t\t\t\t\t\t\t\tsubtitle={<span>owner: {repos.owner}</span>}\n\t\t\t\t\t\t\t\tactionIcon={this.renderButton(repos, classes)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GridListTile>\n\t\t\t\t\t))}\n\t\t\t\t</GridList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRepoList.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst repos = _.map(state.repos, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { repos };\n};\n\nexport default connect(mapStateToProps, {})(withStyles(styles)(RepoList));\n\n\n\n","const styles = {\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  gridList: {\n    width: 800,\n    height: 750\n  },\n  button: {\n    backgroundColor: '#FFF',\n    marginRight: 20\n  },\n  backButton: {\n    backgroundColor: '#A5668B',\n    marginRight: 20\n  },\n  headerText: {\n    textAlign: 'center',\n    marginTop: '10%',\n    marginBottom: '10%'\n  },\n  hrContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchOrgsDataGithubAPI, fetchReposInOrg } from '../../actions';\nimport { addWebhook, deleteWebhook } from '../../utils/helpers'\nimport _ from 'lodash';\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListHeader from '@material-ui/core/ListSubheader';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// Styles\nimport styles from './OrgsList.style';\n\nclass RepoList extends React.Component {\n\n\tviewReposInOrg = (org) => {\n\t\tthis.props.fetchReposInOrg(org);\n\t};\n\n\trenderOrgs = () => {\n\t\tthis.props.fetchOrgsDataGithubAPI();\n\t};\n\n\taddWebhook = (org) => {\n\t\taddWebhook(org);\n\t};\n\n\tdeleteHook = (org) => {\n\t\tdeleteWebhook(org)\n\t}\n\n\n\trenderButton = (orgs, classes) => {\n\t\tif (orgs.reposURL) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={() => this.viewReposInOrg(orgs)} variant=\"contained\" className={classes.button}>\n\t\t\t\t\t\tView\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (orgs.reposURL && !orgs.admin || orgs.reposInOrgss && !orgs.admin) {\n\t\t\treturn (\n\t\t\t\t<Button variant=\"contained\" className={classes.button}>\n\t\t\t\t\tNot admin\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else if (orgs.active) {\n\t\t\treturn (\n\t\t\t\t<Button onClick={() => this.deleteHook(orgs)} variant=\"contained\" className={classes.button}>\n\t\t\t\t\tUnsubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button onClick={() => this.addWebhook(orgs)} variant=\"contained\" className={classes.button}>\n\t\t\t\t\tSubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\n\t};\n\n\tcheckWhichAvatarToRender = (orgs) => {\n\t\tif (orgs.avatarIMG) {\n\t\t\treturn orgs.avatarIMG;\n\t\t} else {\n\t\t\treturn orgs.avatarURL;\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<GridList cellHeight={180} className={classes.gridList}>\n\t\t\t\t\t<GridListTile key=\"header\" cols={2} style={{ height: 'auto' }}>\n\t\t\t\t\t\t<ListHeader component=\"div\">\n\t\t\t\t\t\t\t<div className={classes.hrContainer}>\n\n\t\t\t\t\t\t\t\t<Typography className={classes.headerText} variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\t\t\tGithub Organizations\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</ListHeader>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t\t{this.props.orgs.map((orgs) => (\n\t\t\t\t\t\t<GridListTile key={orgs.name}>\n\t\t\t\t\t\t\t<img src={this.checkWhichAvatarToRender(orgs)} alt={'avatar'} />\n\t\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\t\ttitle={orgs.name}\n\t\t\t\t\t\t\t\tkey={orgs.name}\n\t\t\t\t\t\t\t\tsubtitle={<span> {orgs.url}</span>}\n\t\t\t\t\t\t\t\tactionIcon={this.renderButton(orgs, classes)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GridListTile>\n\t\t\t\t\t))}\n\t\t\t\t\t<Button onClick={() => this.renderOrgs()} variant=\"contained\" className={classes.backButton}>\n\t\t\t\t\t\tBack\n\t\t\t\t\t</Button>\n\t\t\t\t</GridList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRepoList.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst orgs = _.map(state.orgs, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { orgs };\n};\n\nexport default connect(mapStateToProps, {\n\tfetchOrgsDataGithubAPI,\n\tfetchReposInOrg\n})(withStyles(styles)(RepoList));\n","const styles = {\n    root: {\n        maxWidth: 860,\n        marginTop: '3%',\n        margin: 'auto',\n        width: '80‰',\n        textAlign: 'center',\n      \n    },\n    Button: {\n        marginTop: 10,\n        marginRight: 110\n    },\n    delete: {\n        textAlign: 'right'\n    }\n}\n\nexport default styles\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { } from '../../actions';\nimport { currentLoggedInUserFirestoreReference, getCurrentLoggedInGithubID } from '../../utils/helpers'\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport styles from './Notifications.style';\n\nclass Notifications extends React.Component {\n\n\n\tclearNotifications = () => {\n\t\tconsole.log('clear noti')\n\t}\n\n\trenderIfNotification = (notifications, classes) => {\n\t\tif (notifications.length === 0) {\n\t\t\treturn (\n\t\t\t\t<Typography variant=\"overline\" gutterBottom>\n\t\t\t\t\tNo new notifications\n\t\t\t\t</Typography>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div key={notifications}>\n\n\t\t\t\t\t<div className={classes.container}>\n\t\t\t\t\t\t<Typography className={classes.headline} variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\tNotifications\n\t\t\t\t\t\t<div className={classes.delete} >\n\t\t\t\t\t\t\t\t<Tooltip title=\"Delete\">\n\t\t\t\t\t\t\t\t\t<IconButton onClick={this.clearNotifications} aria-label=\"Delete\">\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{notifications.map((notification) => (\n\t\t\t\t\t\t<List key={notification.time}>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<Avatar alt=\"\" src={notification.avatar} ></Avatar>\n\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={notification.title}\n\t\t\t\t\t\t\t\t\tsecondary={notification.body}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\t\t\t{notification.createdBy} on  {notification.repositoryName}\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem>\n\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary=''\n\t\t\t\t\t\t\t\t\tsecondary=''\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\t\t\t{notification.time.slice(0, 24)}\n\t\t\t\t\t\t\t\t</Typography>\n\n\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t</List>\n\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconsole.log(this.props.notifications)\n\n\t\treturn <div className={classes.root}>{this.renderIfNotification(this.props.notifications, classes)}</div>;\n\t}\n}\n\nNotifications.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst notifications = _.map(state.notification, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { notifications };\n};\n\nexport default connect(mapStateToProps, {})(withStyles(styles)(Notifications));\n","const styles = {\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        overflow: 'hidden'\n    },\n    gridList: {\n        width: 800,\n        height: 750\n    },\n    button: {\n        backgroundColor: '#FFF',\n        marginRight: 20\n    },\n    headerText: {\n        textAlign: 'center',\n        marginTop: '10%',\n        marginBottom: '10%'\n    },\n    hrContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    text: {\n        textAlign: 'center',\n        marginTop: 300\n\n    }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addWebhook, deleteWebhook } from '../../utils/helpers'\nimport _ from 'lodash';\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListHeader from '@material-ui/core/ListSubheader';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// Styles\nimport styles from './SubscriptionList.style';\n\nclass SubscriptionList extends React.Component {\n\n\tturnOffNotification = (subscription) => {\n\t\tconsole.log('delete')\n\t\tdeleteWebhook(subscription)\n\t};\n\n\tturnOnNotification = (subscription) => {\n\t\taddWebhook(subscription);\n\t};\n\n\trenderButton = (subscription, classes) => {\n\t\tif (subscription.active) {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.turnOffNotification(subscription)}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\tUnsubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.turnOnNotification(subscription)}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\tSubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<GridList cellHeight={180} className={classes.gridList}>\n\t\t\t\t\t<GridListTile key=\"header\" cols={2} style={{ height: 'auto' }}>\n\t\t\t\t\t\t<ListHeader component=\"div\">\n\t\t\t\t\t\t\t<div className={classes.hrContainer}>\n\t\t\t\t\t\t\t\t<Typography className={classes.headerText} variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\t\t\tMy Subscriptions\n\t\t\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ListHeader>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t\t{this.props.subscription.map((subscription) => (\n\t\t\t\t\t\t<GridListTile key={subscription.id}>\n\t\t\t\t\t\t\t<img src={subscription.avatarURL} alt={subscription.name} />\n\t\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\t\ttitle={subscription.name}\n\t\t\t\t\t\t\t\tsubtitle={<span>owner: {subscription.owner}</span>}\n\t\t\t\t\t\t\t\tactionIcon={this.renderButton(subscription, classes)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GridListTile>\n\t\t\t\t\t))}\n\t\t\t\t</GridList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSubscriptionList.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst subscription = _.map(state.subscription, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { subscription };\n};\n\nexport default connect(mapStateToProps, {\n})(withStyles(styles)(SubscriptionList));\n\n\n\n","const styles = {\n    root: {\n        display: ' flex',\n        height: '100%',\n\n    },\n    githubStatsContainer: {\n        flex: 1,\n        marginTop: '8%'\n    },\n    headerText: {\n        textAlign: 'center'\n    },\n    underlineContainer: {\n        display: 'inline-flex',\n        marginTop: '4%',\n        textAlign: 'center'\n    },\n    text: {\n        alignSelf: 'center',\n        paddingRight: 20,\n        marginLeft: '1%',\n        width: 200,\n        textAlign: 'center'\n\n    },\n    numberText: {\n        textAlign: 'center'\n    }\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport styles from './Profile.style'\n\nclass Profile extends React.Component {\n  render() {\n    const { classes } = this.props\n    return (\n\n      <div className={classes.root}>\n\n        <div className={classes.githubStatsContainer}>\n\n          <div className={classes.headerText} >\n            <Typography variant='overline' color='inherit'>\n              Github Overview\n            </Typography>\n\n\n            <Typography variant='overline' color='inherit'>\n              Logged in user : {this.props.profile.login}\n            </Typography>\n\n            <div className={classes.underlineContainer}>\n              <Typography className={classes.text} variant='overline' color='inherit'>\n                Private Repos\n                <hr />\n                <Typography className={classes.numberText} variant='overline' color='inherit'>\n                  {this.props.profile.total_private_repos}\n                </Typography>\n              </Typography>\n\n              <Typography className={classes.text} variant='overline' color='inherit'>\n                Public Repos\n                 <hr />\n\n                <Typography className={classes.numberText} variant='overline' color='inherit'>\n                  {this.props.profile.public_repos}\n                </Typography>\n\n              </Typography>\n              <Typography className={classes.text} variant='overline' color='inherit'>\n                Followers\n                <hr />\n                <Typography className={classes.numberText} variant='overline' color='inherit'>\n                  {this.props.profile.followers}\n                </Typography>\n              </Typography>\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n    )\n  }\n}\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\nexport default connect(mapStateToProps, {})(withStyles(styles)(Profile))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2\n    }\n})\n\nfunction Spinner(props) {\n    const { classes } = props\n    return (\n        <div>\n            <CircularProgress className={classes.progress} />\n        </div>\n    )\n}\n\nSpinner.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Spinner)\n","const styles = {\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    spinner: {\n        marginTop: \"25%\"\n    }\n}\n\nexport default styles\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { allowNotifications } from '../../utils/helpers';\nimport { saveReposToFireStore, saveOrgsToFireStore } from '../../utils/firebaseHelpers';\nimport { withStyles } from '@material-ui/core/styles';\n// Components\nimport Navbar from '../Navbar/Navbar';\nimport RepoList from '../RepoList/RepoList';\nimport OrgsList from '../OrgsList/OrgsList';\nimport Notifcations from '../Notifications/Notifications';\nimport SubscriptionList from '../SubscriptionList/SubscriptionList'\nimport Profile from '../Profile/Profile'\nimport Spinner from '../Spinner/Spinner'\nimport styles from './Dashboard.style'\n\nimport {\n\tfetchReposDataGithubAPI,\n\tfetchUserDataFromGithubAPI,\n\tfetchOrgsDataGithubAPI,\n\tfetchNotifications,\n\tfetchSubscriptions\n} from '../../actions';\n\nclass Dashboard extends Component {\n\tcomponentWillMount() {\n\t\tallowNotifications();\n\t\tsaveReposToFireStore()\n\t\tsaveOrgsToFireStore()\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.fetchUserDataFromGithubAPI();\n\t\tthis.props.fetchReposDataGithubAPI()\n\t\tthis.props.fetchOrgsDataGithubAPI()\n\t\tthis.props.fetchNotifications()\n\t\tthis.props.fetchSubscriptions()\n\t}\n\n\ttoggelComponentToRender = () => {\n\t\tif (this.props.toggel.showNotifications) {\n\t\t\treturn <Notifcations />;\n\t\t} else if (this.props.toggel.showRepositories) {\n\t\t\treturn <RepoList />;\n\t\t} else if (this.props.toggel.showOrganization) {\n\t\t\treturn <OrgsList />;\n\t\t} else if (this.props.toggel.showSubscription) {\n\t\t\treturn <SubscriptionList />\n\t\t}\n\t\telse {\n\t\t\treturn <Profile />\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\tif (Object.entries(this.props.profile).length === 0 && this.props.profile.constructor === Object) {\n\n\t\t\treturn (<div className={classes.container}>\n\t\t\t\t<div className={classes.spinner}>\n\t\t\t\t\t<Spinner className={classes.spinner} />\n\t\t\t\t</div>\n\t\t\t</div>)\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t{this.toggelComponentToRender()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nDashboard.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\treturn state;\n};\n\nexport default connect(mapStateToProps, {\n\tfetchUserDataFromGithubAPI,\n\tfetchReposDataGithubAPI,\n\tfetchOrgsDataGithubAPI,\n\tfetchNotifications,\n\tfetchSubscriptions\n})(withStyles(styles)(Dashboard))\n","import React, { Component } from 'react'\n\nclass NotFound extends Component {\n  render () {\n    return (\n      <div>\n        <p>Page Not Found </p>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport history from './config/history'\nimport { Provider } from 'react-redux'\nimport store from './config/store'\nimport Main from './components/Main'\nimport Dashboard from './components/Dashboard/Dashboard'\nimport NotFound from './components/NotFound/NotFound'\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <div>\n            <Switch>\n              <Route exact path='/' component={Main} />\n              <Route exact path='/dashboard' component={Dashboard} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker\n    .register('../firebase-messaging-sw.js')\n    .then(function (registration) {\n      console.log('Registration successful, scope is:', registration.scope)\n    })\n    .catch(function (err) {\n      console.log('Service worker registration failed, error:', err)\n    })\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import * as firebase from 'firebase'\n\nconst config = {\n  apiKey: 'AIzaSyBr2zjlkIdRl2TwTN2OOsA85AW8NeHBI2k',\n  authDomain: 'guthubdashboard.firebaseapp.com',\n  databaseURL: 'https://guthubdashboard.firebaseio.com',\n  projectId: 'guthubdashboard',\n  storageBucket: 'guthubdashboard.appspot.com',\n  messagingSenderId: '259327836521'\n}\n\nexport default firebase.initializeApp(config)\n","import { getGitHubToken, getCurrentLoggedInGithubID, currentLoggedInUserFirestoreReference } from './helpers'\nimport firebase from '../config/firebase'\nlet db = firebase.firestore()\n\n/* \nRetrieve github repositories from authenticated user and saves it as objects to firestore under field \"repos\"\n*/\n\nexport const saveReposToFireStore = async () => {\n    window\n        .fetch('https://api.github.com/user/repos', {\n            headers: { Authorization: 'token ' + await getGitHubToken() }\n        })\n        .then((response) => response.json())\n        .then(repo => {\n            let keys = Object.keys(repo)\n\n            for (var i = 0; i < keys.length; i++) {\n                let k = keys[i]\n                let repos = {}\n\n                var reposObject = {\n                    'id': repo[k].id,\n                    'name': repo[k].name,\n                    'hooks_url': repo[k].hooks_url,\n                    'url': repo[k].url,\n                    'owner': repo[k].owner.login,\n                    'admin': repo[k].permissions.admin,\n                    'avatarURL': repo[k].owner.avatar_url\n                }\n\n                repos[`${reposObject.id}`] = reposObject\n\n                db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).set({ repos: repos }, { merge: true })\n            }\n        })\n}\n\n/* \nRetrieve github repositories from authenticated user and saves it as objects to firestore under field \"reposInOrgs\"\n*/\n\n\nexport const saveReposInOrgsToFireStore = async (orgName) => {\n    window\n        .fetch(`https://api.github.com/orgs/${orgName}/repos`, {\n            headers: { Authorization: 'token ' + await getGitHubToken() }\n        })\n        .then((response) => response.json())\n        .then(repo => {\n            let keys = Object.keys(repo)\n\n            for (var i = 0; i < keys.length; i++) {\n                let k = keys[i]\n\n                let reposInOrgs = {}\n\n                let reposInOrgObject = {\n                    'id': repo[k].id,\n                    'name': repo[k].name,\n                    'hooks_url': repo[k].hooks_url,\n                    'url': repo[k].url,\n                    'owner': repo[k].owner.login,\n                    'admin': repo[k].permissions.admin,\n                    'avatarURL': repo[k].owner.avatar_url,\n                    'reposInOrgss': true\n                }\n\n                reposInOrgs[`${reposInOrgObject.id}`] = reposInOrgObject\n\n                db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).set({ reposInOrgs: reposInOrgs }, { merge: true })\n            }\n        })\n}\n\n\n/* \nRetrieve github organizations from authenticated user and saves it as objects to firestore under field \"orgs\"\n*/\n\nexport const saveOrgsToFireStore = async () => {\n    window\n        .fetch(`https://api.github.com/user/orgs`, {\n            headers: { Authorization: 'token ' + await getGitHubToken() }\n        })\n        .then((response) => response.json())\n        .then(async (data) => {\n            let keys = Object.keys(data)\n\n            for (var i = 0; i < keys.length; i++) {\n                let k = keys[i]\n                let orgs = {}\n\n                let orgsObject = {\n                    'id': data[k].id,\n                    'name': data[k].login,\n                    'hooks_url': data[k].hooks_url,\n                    'url': data[k].url,\n                    'avatarURL': data[k].avatar_url,\n                    'reposURL': data[k].repos_url\n                }\n\n                saveReposInOrgsToFireStore(data[k].login)\n\n                orgs[`${orgsObject.id}`] = orgsObject\n\n                db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).set({ orgs: orgs }, { merge: true })\n            }\n        })\n}\n\n/* \n    Update the repository active status in the organization depending on if a webhook has been created or deleted\n*/\n\nexport const updateReposInOrgs = (repo, data, activeStatus) => {\n    let update = {}\n    let subscriptions = {}\n\n    if (data === null) {\n        data = repo\n    }\n\n    let obj = {\n        active: activeStatus,\n        admin: repo.admin,\n        avatarURL: repo.avatarURL,\n        hooks_url: repo.hooks_url,\n        id: repo.id,\n        name: repo.name,\n        owner: repo.owner,\n        url: repo.url,\n        hooksID: data.url,\n        reposInOrgss: true\n    }\n\n    update[`reposInOrgs.${repo.id}`] = obj\n    subscriptions[`subscriptions.${repo.id}`] = obj\n\n    currentLoggedInUserFirestoreReference().update(update)\n    currentLoggedInUserFirestoreReference().update(subscriptions)\n}\n\n/* \n    Update the repository active status depending on if a webhook has been created or deleted\n*/\n\nexport const updateRepos = (repo, data, activeStatus) => {\n    let update = {}\n    let subscriptions = {}\n\n    if (data === null) {\n        data = repo\n    }\n\n    let obj = {\n        active: activeStatus,\n        admin: repo.admin,\n        avatarURL: repo.avatarURL,\n        hooks_url: repo.hooks_url,\n        id: repo.id,\n        name: repo.name,\n        owner: repo.owner,\n        url: repo.url,\n        hooksID: data.url\n    }\n    update[`repos.${repo.id}`] = obj\n    subscriptions[`subscriptions.${repo.id}`] = obj\n\n    currentLoggedInUserFirestoreReference().update(update)\n    currentLoggedInUserFirestoreReference().update(subscriptions)\n}\n\n\nexport const updateNotifications = (repo) => {\n    console.log(repo.notificationsLength)\n\n    repo.notificationsLength.forEach(element => {\n\n        console.log(element)\n        // let obj = {\n        //     avatar: element.avatar,\n        //     body: element.body,\n        //     header: element.header,\n        //     repoID: element.repoID,\n        //     repositoryName: element.repositoryName,\n        //     time: element.time,\n        //     title: element.title,\n        //     type: element.type,\n        //     read: true\n        // }\n\n        //currentLoggedInUserFirestoreReference().update({ \"notifications.notification\": \"Help\" })\n    })\n}\n\n        // let a = element.status = true\n        // currentLoggedInUserFirestoreReference().update(a)\n\n\n\n\n    // let update = {}\n    // let subscriptions = {}\n\n    // console.log(repo)\n\n    // if (data === null) {\n    //     data = repo\n    // }\n\n    // let obj = {\n    //     active: activeStatus,\n    //     admin: repo.admin,\n    //     avatarURL: repo.avatarURL,\n    //     hooks_url: repo.hooks_url,\n    //     id: repo.id,\n    //     name: repo.name,\n    //     owner: repo.owner,\n    //     url: repo.url,\n    //     hooksID: data.url,\n    //     reposInOrgss: true\n    // }\n\n\n    // currentLoggedInUserFirestoreReference().update(subscriptions)\n","// Auth\nexport const LOGGED_IN_SUCCES = 'LOGGED_IN_SUCCESS'\nexport const SIGN_OUT = 'SIGN_OUT'\n\n// Profile\nexport const GET_USER_PROFILE_DATA = 'GET_USER_PROFILE_DATA'\n\n// Repos - Orgs\nexport const GET_REPOS_DATA = 'GET_REPOS_DATA'\nexport const GET_ORGS_DATA = 'GET_ORGS_DATA'\nexport const GET_REPOS_IN_ORGS = 'GET_REPOS_IN_ORGS'\nexport const GET_SUBSCRIPTIONS = 'GET_SUBSCRIPTIONS'\n\n// Webhook\nexport const ADD_WEBHOOK = 'ADD_WEBHOOK'\nexport const DELETE_WEBHOOK = 'DELETE_WEBHOOK'\n\n// Notifications\nexport const FETCH_NOTIFICATIONS = 'FETCH_NOTIFICATIONS'\nexport const DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS'\nexport const FETCH_NOTIFICATIONS_LENGTH = 'FETCH_NOTIFICATIONS_LENGTH'\n\n// Toggel\nexport const SHOW_NOTIFICATIONS = 'SHOW_NOTIFICATIONS'\nexport const SHOW_REPOSITORIES = 'SHOW_REPOSITORIES'\nexport const SHOW_ORGANIZATION = 'SHOW_ORGANIZATION'\nexport const SHOW_PROFILE = 'SHOW_PROFILE'\nexport const SHOW_SUBSCRIPTIONS = 'SHOW_SUBSCRIPTIONS'\n","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory()\n","import firebase from '../config/firebase'\nimport { updateReposInOrgs, updateRepos } from './firebaseHelpers'\nlet db = firebase.firestore()\nlet messaging = firebase.messaging()\n\n/* \nRetrieve firebaseID from logged in user.\n*/\n\nexport const getCurrentLoggedInUserID = () => {\n  let user = firebase.auth().currentUser\n  return user.uid\n}\n\n/* \nRetrieve githubID from logged in user.\n*/\n\nexport const getCurrentLoggedInGithubID = () => {\n  let id = window.localStorage.getItem('loggedInUser')\n\n  // let githubID = await db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).get().then(function (doc) {\n  //   if (doc.exists) {\n  //     return doc.data().accessToken\n  //   }\n  // }).catch(error => {\n  //   console.log(`Error getting document:`, error)\n  //   return error\n  // })\n\n  // return accessToken\n\n  return id\n}\n\n\n/* \nSaves GithubID of logged in user to firestore\n*/\n\nexport const saveGithubIDToFireStore = (githubID) => {\n  db.collection('users').doc(`${githubID}`).set({\n    userID: githubID\n  }, { merge: true })\n}\n\n/* \nReturns a \"query\" to the current users data from Firestore\n*/\n\nexport const currentLoggedInUserFirestoreReference = () => {\n\n  return db.collection('users').doc(`${getCurrentLoggedInGithubID()}`)\n}\n\n\n/* \nAsk for permission to send notifications.\nIf accepted, store nsgToken to the users firestore collection.\nmsgToken will be used to send notification when a user if offline.\n*/\n\nexport const allowNotifications = () => {\n  messaging\n    .requestPermission()\n    .then(() => {\n      return messaging.getToken()\n    })\n    .then((token) => {\n      currentLoggedInUserFirestoreReference().set({ msgToken: token }, { merge: true })\n    })\n    .catch((err) => {\n      console.log('An error accured : ' + err)\n    })\n}\n\n/* \nSave githuvToken to the users Firestore collection.\naccesToken will be used to fetch data from the github API\n*/\n\nexport const setGitHubToken = (accessToken) => {\n  db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).set({\n    accessToken: accessToken\n  }, { merge: true })\n}\n\n/* \nReturns a \"query\" to the current users data from Firestore for getting the accesToken\n*/\n\nexport const getGitHubToken = async () => {\n\n  let accessToken = await db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).get().then(function (doc) {\n    if (doc.exists) {\n      return doc.data().accessToken\n    }\n  }).catch(error => {\n    console.log(`Error getting document:`, error)\n    return error\n  })\n\n  return accessToken\n}\n\n/* \nReturns an object with config settings for creating a hook\n*/\n\nexport const getConfigURL = () => {\n  let config = {\n    url: `https://us-central1-guthubdashboard.cloudfunctions.net/events?id=${getCurrentLoggedInUserID()}`,\n    content_type: 'json'\n  }\n  return config\n}\n\n/* \nPOST to Github API, attempt to add a webhook to a repository.\nUpdate firestore with repo that the webhook has been created  to with a \"activeStatus\" set to true.\nactiveStatus controll the buttons status of the \"Components/RepoList\".\n*/\n\n\nexport const addWebhook = async (repo) => {\n\n  let githubParameters = { events: ['issues', 'push'], name: 'web', config: getConfigURL() }\n\n  window\n    .fetch(repo.hooks_url, {\n      method: 'POST',\n      body: JSON.stringify(githubParameters),\n      headers: {\n        Authorization: 'token ' + await getGitHubToken(),\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((response) => response.json())\n    .then((data) => {\n      let activeStatus = true\n\n      if (repo.reposInOrgss) {\n        updateReposInOrgs(repo, data, activeStatus)\n      } else {\n        updateRepos(repo, data, activeStatus)\n      }\n\n    })\n    .catch((err) => {\n      console.log('An error accoured when trying to add webhook : ' + err)\n    })\n}\n\n\n/* \nDELETE to Github API, attempt to delete a webhook from a repository.\nUpdate firestore with repo that the webhook has been removed from, from \"activeStatus\" true tpo false.\nactiveStatus controll the buttons status of the \"Components/RepoList\".\n*/\n\nexport const deleteWebhook = async (repo) => {\n  window\n    .fetch(repo.hooksID, {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'token ' + await getGitHubToken(),\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(() => {\n      let activeStatus = false\n\n      if (repo.reposInOrgss) {\n        updateReposInOrgs(repo, null, activeStatus)\n      } else {\n        updateRepos(repo, null, activeStatus)\n      }\n\n    }).catch((err) => {\n      console.log('An error accoured when trying to delete webhook : ' + err)\n    })\n}\n"],"sourceRoot":""}