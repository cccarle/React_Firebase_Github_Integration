{"version":3,"sources":["config/history.js","reducers/authReducer.js","reducers/profileReducer.js","reducers/reposReducer.js","reducers/orgsReducer.js","reducers/notificationsReducer.js","reducers/toggelReducer.js","reducers/index.js","actions/types.js","config/store.js","config/firebase.js","actions/AuthActions.js","actions/FetchUserDataActions.js","actions/SubscriptionActions.js","actions/NotificationsAction.js","components/Main.style.js","components/Main.js","components/CardProfile/CardProfile.style.js","components/CardProfile/CardProfile.js","components/SideNav/SideNav.js","components/Navbar/Navbar.style.js","components/Navbar/Navbar.js","actions/ToggelActions.js","components/RepoList/RepoList.Style.js","components/RepoList/RepoList.js","components/OrgsList/OrgsList.style.js","components/OrgsList/OrgsList.js","components/Notifications/Notifications.js","components/Dashboard/Dashboard.js","components/NotFound/NotFound.js","App.js","index.js","assets/examplepic.jpg"],"names":["createHistory","initialState","isAuthenticated","profileAvatar","profileName","githubURL","name","showNotifications","showRepositories","showOrganization","combineReducers","auth","state","arguments","length","undefined","type","Object","objectSpread","profile","action","payload","avatar_url","url","repos","orgs","notification","toggel","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","checkIfUserIsLoggedIn","dispatch","onAuthStateChanged","user","history","push","fetchOrgsDataGithubAPI","orgsToFilter","accessToken","window","localStorage","getItem","fetch","headers","Authorization","then","response","json","data","keys","i","k","hooks_url","id","login","repos_url","fetchReposDataGithubAPI","arrayToFilter","owner","admin","permissions","arr","filter","child","db","firestore","addWebhook","webhookURL","console","log","events","config","content_type","method","body","JSON","stringify","Content-Type","collection","add","webhook","docRef","catch","error","err","messaging","fetchNotifications","matchedNotificationWithUserArray","onMessage","styles","containerStyle","marginTop","textAlign","width","root","maxWidth","text","fontSize","color","Main","signInAttempt","_this","props","signInUser","this","classes","react_default","a","createElement","className","Typography_default","component","variant","gutterBottom","Button_default","onClick","size","React","Component","connect","userData","provider","Firebase","GithubAuthProvider","addScope","signInWithPopup","result","credential","setItem","errorCode","errorMessage","concat","withStyles","theme","card","media","height","paddingTop","actions","display","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","CardProfile","renderImage","CardMedia_default","image","fetchUserDataFromGithubAPI","Card_default","CardHeader_default","Avatar_default","aria-label","charAt","title","_state$profile","SideNav","top","left","bottom","right","toggleDrawer","side","open","setState","defineProperty","sideList","list","List_default","components_CardProfile_CardProfile","map","index","ListItem_default","button","key","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","ButtonColor","Drawer_default","onClose","tabIndex","role","onKeyDown","fullList","flexGrow","grow","menuButton","marginRight","ButtonContainer","navbarColor","Navbar","signOutAttempt","signOutUser","toggelNotification","showNotification","toggelRepositories","toggelOrganizations","showOrganizations","AppBar_default","position","Toolbar_default","components_SideNav_SideNav","Badge_default","margin","badgeContent","notifications","_","val","signOut","flexWrap","justifyContent","overflow","gridList","headerText","RepoList","addWebHooks","_this2","GridList_default","cellHeight","GridListTile_default","cols","style","ListSubheader_default","src","examplePic","alt","GridListTileBar_default","subtitle","actionIcon","backButton","orgName","fetchReposInOrg","renderOrgs","checkIfAdmin","checkIfAvatar","adminReposInOrg","reposInOrg","FolderList","renderIfNotification","eventURL","Image_default","secondary","palette","background","paper","Button","Dashboard","renderRepoOrNotificatin","Notifications","components_RepoList_RepoList","OrgsList","requestPermission","getToken","token","currentUser","doc","providerData","uid","set","msgToken","merge","components_Navbar_Navbar","NotFound","App","es","Router","Switch","Route","exact","path","navigator","serviceWorker","register","registration","scope","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6d1bbcf7.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory()","import { LOGGED_IN_SUCCES, SIGN_OUT } from '../actions/types'\n\nconst initialState = {\n  isAuthenticated: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOGGED_IN_SUCCES:\n      return {\n        ...state,\n        isAuthenticated: true\n      }\n\n    case SIGN_OUT:\n      return {\n        ...state,\n        isAuthenticated: false\n      }\n\n    default:\n      return state\n  }\n}\n","import { GET_USER_PROFILE_DATA } from '../actions/types'\n\nconst initialState = {\n  profileAvatar: '',\n  profileName: '',\n  githubURL: ''\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_USER_PROFILE_DATA:\n      return {\n        ...state,\n        profileAvatar: action.payload.avatar_url,\n        profileName: action.payload.name,\n        githubURL: action.payload.url\n      }\n\n    default:\n      return state\n  }\n}\n","import { GET_REPOS_DATA } from '../actions/types'\n\nconst initialState = {\n  name: ''\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_REPOS_DATA:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import { GET_ORGS_DATA, GET_REPOS_IN_ORGS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ORGS_DATA:\n      return action.payload\n\n    case GET_REPOS_IN_ORGS:\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","import { FETCH_NOTIFICATIONS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_NOTIFICATIONS:\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","import {\n  SHOW_NOTIFICATIONS,\n  SHOW_REPOSITORIES,\n  SHOW_ORGANIZATION\n} from '../actions/types'\n\nconst initialState = {\n  showNotifications: false,\n  showRepositories: true,\n  showOrganization: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SHOW_NOTIFICATIONS:\n      return {\n        ...state,\n        showNotifications: action.payload\n      }\n\n    case SHOW_REPOSITORIES:\n      return {\n        ...state,\n        showRepositories: action.payload\n      }\n\n    case SHOW_ORGANIZATION:\n      return {\n        ...state,\n        showOrganization: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport authReducer from './authReducer'\nimport profileReducer from './profileReducer'\nimport reposReducer from './reposReducer'\nimport orgsReducer from './orgsReducer'\nimport notificationsReducer from './notificationsReducer'\nimport toggelReducers from './toggelReducer'\n\nexport default combineReducers({\n  auth: authReducer,\n  profile: profileReducer,\n  repos: reposReducer,\n  orgs: orgsReducer,\n  notification: notificationsReducer,\n  toggel: toggelReducers\n})\n","// auth\nexport const TEST_DISPATCH = 'TEST_DISPATCH'\nexport const LOGGED_IN_SUCCES = 'LOGGED_IN_SUCCESS'\nexport const SIGN_OUT = 'SIGN_OUT'\n\n// profile\nexport const GET_USER_PROFILE_DATA = 'GET_USER_PROFILE_DATA'\n\n// Repos / Orgs\nexport const GET_REPOS_DATA = 'GET_REPOS_DATA'\nexport const GET_ORGS_DATA = 'GET_ORGS_DATA'\nexport const GET_REPOS_IN_ORGS = 'GET_REPOS_IN_ORGS'\n\n// Webhook\nexport const ADD_WEBHOOK = 'ADD_WEBHOOK'\n\n// Notifications\nexport const FETCH_NOTIFICATIONS = 'FETCH_NOTIFICATIONS'\nexport const DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS'\n\n// Toggel\nexport const SHOW_NOTIFICATIONS = 'SHOW_NOTIFICATIONS'\nexport const SHOW_REPOSITORIES = 'SHOW_REPOSITORIES'\nexport const SHOW_ORGANIZATION = 'SHOW_ORGANIZATION'\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers/index'\nconst middleware = [thunk]\nconst initialState = {}\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n)\n\nexport default store\n","import * as firebase from 'firebase'\n\nconst config = {\n  apiKey: 'AIzaSyBr2zjlkIdRl2TwTN2OOsA85AW8NeHBI2k',\n  authDomain: 'guthubdashboard.firebaseapp.com',\n  databaseURL: 'https://guthubdashboard.firebaseio.com',\n  projectId: 'guthubdashboard',\n  storageBucket: 'guthubdashboard.appspot.com',\n  messagingSenderId: '259327836521'\n}\n\nexport default firebase.initializeApp(config)\n","import { LOGGED_IN_SUCCES, SIGN_OUT } from './types';\nimport firebase from '../config/firebase';\nimport history from '../config/history';\nimport * as Firebase from 'firebase';\n\nexport const checkIfUserIsLoggedIn = () => {\n\treturn (dispatch) => {\n\t\tfirebase.auth().onAuthStateChanged(function(user) {\n\t\t\tif (user) {\n\t\t\t\tdispatch({ type: LOGGED_IN_SUCCES, payload: true });\n\t\t\t\thistory.push('/dashboard');\n\t\t\t} else {\n\t\t\t\tdispatch({ type: SIGN_OUT, payload: false });\n\t\t\t}\n\t\t});\n\t};\n};\n\nexport const signInUser = (userData) => {\n\treturn (dispatch) => {\n\t\tlet provider = new Firebase.auth.GithubAuthProvider();\n\n\t\tprovider.addScope('user');\n\t\tprovider.addScope('repo');\n\n\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.signInWithPopup(provider)\n\t\t\t.then(function(result) {\n\t\t\t\tdispatch({ type: LOGGED_IN_SUCCES, payload: true });\n\t\t\t\tlet accessToken = result.credential.accessToken;\n\t\t\t\twindow.localStorage.setItem('token', accessToken);\n\t\t\t\thistory.push('/dashboard');\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tlet { errorCode, errorMessage } = error;\n\t\t\t\tconsole.log(\n\t\t\t\t\t`Something went wrong please check your credentials or try again. error message : ${errorMessage} - ${errorCode}`\n\t\t\t\t);\n\t\t\t});\n\t};\n};\n\nexport const signOutUser = (userData) => {\n\treturn (dispatch) => {\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.signOut()\n\t\t\t.then(function() {\n\t\t\t\tdispatch({ type: SIGN_OUT, payload: false });\n\t\t\t\tconsole.log('sign out succesfull');\n\t\t\t\thistory.push('/');\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log('error accurred' + error);\n\t\t\t});\n\t};\n};\n","import { GET_USER_PROFILE_DATA, GET_REPOS_DATA, GET_ORGS_DATA, GET_REPOS_IN_ORGS, TEST_DISPATCH } from './types';\n\nexport const fetchUserDataFromGithubAPI = () => {\n\treturn (dispatch) => {\n\t\tconst accessToken = window.localStorage.getItem('token');\n\t\twindow\n\t\t\t.fetch('https://api.github.com/user', {\n\t\t\t\theaders: { Authorization: 'token ' + accessToken }\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({ type: GET_USER_PROFILE_DATA, payload: data });\n\t\t\t});\n\t};\n};\n\nexport const fetchOrgsDataGithubAPI = () => {\n\treturn (dispatch) => {\n\t\tconst orgsToFilter = [];\n\t\tconst accessToken = window.localStorage.getItem('token');\n\n\t\twindow\n\t\t\t.fetch('https://api.github.com/user/orgs', {\n\t\t\t\theaders: { Authorization: 'token ' + accessToken }\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tlet keys = Object.keys(data);\n\n\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\tlet k = keys[i];\n\t\t\t\t\tlet avatar_url = data[k].avatar_url;\n\t\t\t\t\tlet hooks_url = data[k].hooks_url;\n\t\t\t\t\tlet id = data[k].id;\n\t\t\t\t\tlet name = data[k].login;\n\t\t\t\t\tlet url = data[k].url;\n\t\t\t\t\tlet repos_url = data[k].url;\n\n\t\t\t\t\tvar orgs = {\n\t\t\t\t\t\tavatar_url: '',\n\t\t\t\t\t\thooks_url: '',\n\t\t\t\t\t\tid: '',\n\t\t\t\t\t\turl: '',\n\t\t\t\t\t\tname: '',\n\t\t\t\t\t\trepos_url: ''\n\t\t\t\t\t};\n\n\t\t\t\t\torgs.avatar_url = avatar_url;\n\t\t\t\t\torgs.hooks_url = hooks_url;\n\t\t\t\t\torgs.id = id;\n\t\t\t\t\torgs.name = name;\n\t\t\t\t\torgs.url = url;\n\t\t\t\t\torgs.repos_url = repos_url;\n\n\t\t\t\t\torgsToFilter.push(orgs);\n\t\t\t\t}\n\n\t\t\t\tdispatch({ type: GET_ORGS_DATA, payload: orgsToFilter });\n\t\t\t});\n\t};\n};\n\nexport const fetchReposDataGithubAPI = () => {\n\treturn (dispatch) => {\n\t\tconst arrayToFilter = [];\n\t\tconst accessToken = window.localStorage.getItem('token');\n\n\t\twindow\n\t\t\t.fetch('https://api.github.com/user/repos', {\n\t\t\t\theaders: { Authorization: 'token ' + accessToken }\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tlet keys = Object.keys(data);\n\n\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\tlet k = keys[i];\n\t\t\t\t\tlet name = data[k].name;\n\t\t\t\t\tlet hooks_url = data[k].hooks_url;\n\t\t\t\t\tlet url = data[k].url;\n\t\t\t\t\tlet owner = data[k].owner.login;\n\t\t\t\t\tlet id = data[k].id;\n\t\t\t\t\tlet admin = data[k].permissions.admin;\n\n\t\t\t\t\tvar repos = {\n\t\t\t\t\t\tname: '',\n\t\t\t\t\t\thooks_url: '',\n\t\t\t\t\t\turl: '',\n\t\t\t\t\t\towner: '',\n\t\t\t\t\t\tid: '',\n\t\t\t\t\t\tadmin: ''\n\t\t\t\t\t};\n\n\t\t\t\t\trepos.name = name;\n\t\t\t\t\trepos.hooks_url = hooks_url;\n\t\t\t\t\trepos.url = url;\n\t\t\t\t\trepos.owner = owner;\n\t\t\t\t\trepos.id = id;\n\t\t\t\t\trepos.admin = admin;\n\n\t\t\t\t\tarrayToFilter.push(repos);\n\t\t\t\t}\n\n\t\t\t\tlet arr = arrayToFilter.filter((child) => child.admin === true);\n\t\t\t\tdispatch({ type: GET_REPOS_DATA, payload: arr });\n\t\t\t});\n\t};\n};\n\nexport const checkIfReposHasWebhook = (webhookURL) => {\n\treturn (dispatch) => {\n\t\tconst accessToken = window.localStorage.getItem('token');\n\n\t\twindow\n\t\t\t.fetch(webhookURL, {\n\t\t\t\theaders: { Authorization: 'token ' + accessToken }\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tdispatch({ type: TEST_DISPATCH, payload: '' });\n\t\t\t});\n\t};\n};\n\nexport const fetchReposInOrg = (orgName) => {\n\treturn (dispatch) => {\n\t\tlet adminReposInOrg = [];\n\t\twindow\n\t\t\t.fetch(`https://api.github.com/orgs/${orgName}/repos`)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tlet keys = Object.keys(data);\n\n\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\tlet k = keys[i];\n\t\t\t\t\tlet name = data[k].name;\n\t\t\t\t\tlet hooks_url = data[k].hooks_url;\n\t\t\t\t\tlet url = data[k].url;\n\t\t\t\t\tlet owner = data[k].owner.login;\n\t\t\t\t\tlet id = data[k].id;\n\t\t\t\t\tlet admin = data[k].permissions.admin;\n\n\t\t\t\t\tvar reposInOrg = {\n\t\t\t\t\t\tname: '',\n\t\t\t\t\t\thooks_url: '',\n\t\t\t\t\t\turl: '',\n\t\t\t\t\t\towner: '',\n\t\t\t\t\t\tid: '',\n\t\t\t\t\t\tadmin: admin\n\t\t\t\t\t};\n\n\t\t\t\t\treposInOrg.name = name;\n\t\t\t\t\treposInOrg.hooks_url = hooks_url;\n\t\t\t\t\treposInOrg.url = url;\n\t\t\t\t\treposInOrg.owner = owner;\n\t\t\t\t\treposInOrg.id = id;\n\t\t\t\t\treposInOrg.admin = admin;\n\n\t\t\t\t\tadminReposInOrg.push(reposInOrg);\n\t\t\t\t}\n\n\t\t\t\tdispatch({ type: GET_REPOS_IN_ORGS, payload: adminReposInOrg });\n\t\t\t});\n\t};\n};\n","import { ADD_WEBHOOK } from './types';\nimport firebase from '../config/firebase';\nvar db = firebase.firestore();\n\nexport const addWebhook = (webhookURL) => {\n\treturn (dispatch) => {\n\t\tconst accessToken = window.localStorage.getItem('token');\n\n\t\tlet configData = {\n\t\t\turl: 'https://us-central1-guthubdashboard.cloudfunctions.net/events',\n\t\t\tcontent_type: 'json'\n\t\t};\n\n\t\tconsole.log(webhookURL);\n\n\t\tlet data = { events: [ 'issues', 'push' ], name: 'web', config: configData };\n\n\t\twindow\n\t\t\t.fetch(webhookURL, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'token ' + accessToken,\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({ type: ADD_WEBHOOK, payload: data });\n\n\t\t\t\tdb\n\t\t\t\t\t.collection('webhooks')\n\t\t\t\t\t.add({\n\t\t\t\t\t\twebhook: data.url\n\t\t\t\t\t})\n\t\t\t\t\t.then(function(docRef) {\n\t\t\t\t\t\tconsole.log('Document written with ID: ', docRef.id);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function(error) {\n\t\t\t\t\t\tconsole.error('Error adding document: ', error);\n\t\t\t\t\t});\n\n\t\t\t\tconsole.log(data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n};\n\nexport const deleteWebhook = (webhookURL) => {\n\treturn (dispatch) => {};\n};\n","import { FETCH_NOTIFICATIONS, DELETE_NOTIFICATIONS } from './types';\nimport firebase from '../config/firebase';\nconst messaging = firebase.messaging();\nlet db = firebase.firestore();\n\nexport const fetchNotifications = () => {\n\tvar matchedNotificationWithUserArray = [];\n\n\treturn (dispatch) => {\n\t\tmessaging.onMessage((payload) => {\n\t\t\tconsole.log(payload);\n\t\t\tmatchedNotificationWithUserArray.push(payload);\n\t\t\tdispatch({ type: FETCH_NOTIFICATIONS, payload: matchedNotificationWithUserArray });\n\t\t});\n\t};\n};\n\nexport const deleteNotifications = () => {\n\treturn (dispatch) => {\n\t\tdb\n\t\t\t.collection('notifications')\n\t\t\t.doc('{notification}')\n\t\t\t.delete()\n\t\t\t.then(() => {\n\t\t\t\tconsole.log('Document successfully deleted!');\n\t\t\t\tdispatch({ type: DELETE_NOTIFICATIONS });\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error removing document: ', error);\n\t\t\t});\n\t};\n};\n\n// let repoIDFromUser;\n// let notificationArray = [];\n// var matchedNotificationWithUserArray = [];\n// let currentUser = firebase.auth().currentUser;\n// let userID = currentUser.providerData[0].uid;\n\n// var docRef = db.doc(`users/${userID}`).get().then((doc) => {\n// \tif (doc.exists) {\n// \t\trepoIDFromUser = doc.data().repositoryID;\n// \t}\n// });\n\n// // db.collection('notifications').get().then((querySnapshot) => {\n// // \tquerySnapshot.forEach((doc) => {\n// // \t\tnotificationArray.push(doc.data().notification);\n// // \t});\n\n// // \t// repoIDFromUser.forEach((repositoryID) => {\n// // \t// \tnotificationArray.filter(function(el) {\n// // \t// \t\tif (el.repositoryID == repositoryID) {\n// // \t// \t\t\tconst repoObj = {\n// // \t// \t\t\t\ttitle: el.title,\n// // \t// \t\t\t\tbody: el.body\n// // \t// \t\t\t};\n\n// // \t// \t\t\tmatchedNotificationWithUserArray.push(repoObj);\n// // \t// \t\t}\n// // \t// \t});\n// // \t// });\n\n// // \tdispatch({ type: FETCH_NOTIFICATIONS, payload: matchedNotificationWithUserArray });\n// // });\n","const styles = {\n  containerStyle: {\n    marginTop: '20%',\n    textAlign: 'center',\n    width: '100%'\n  },\n  root: {\n    width: '100%',\n    maxWidth: 500\n  },\n  text: {\n    fontSize: 100,\n    color: 'black',\n    textAlign: 'center'\n  }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { signInUser, checkIfUserIsLoggedIn } from '../actions';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './Main.style';\n\nclass Main extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.checkIfUserIsLoggedIn();\n\t}\n\tsignInAttempt = () => {\n\t\tthis.props.signInUser();\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.containerStyle}>\n\t\t\t\t<Typography component=\"h2\" variant=\"h2\" gutterBottom>\n\t\t\t\t\tWelcome To Guthub Dashboard\n\t\t\t\t</Typography>\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={this.signInAttempt} color=\"primary\" size=\"large\" variant=\"outlined\">\n\t\t\t\t\t\tLog in{' '}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nMain.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default connect(null, { signInUser, checkIfUserIsLoggedIn })(withStyles(styles)(Main));\n","const styles = theme => ({\n  card: {\n    maxWidth: 400\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n  },\n  actions: {\n    display: 'flex'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: '#6699CC',\n    fontSize: '12'\n  }\n})\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchUserDataFromGithubAPI } from '../../actions'\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Avatar from '@material-ui/core/Avatar'\n\n// Styles\nimport styles from './CardProfile.style'\n\nclass CardProfile extends React.Component {\n  componentDidMount () {\n    this.props.fetchUserDataFromGithubAPI()\n  }\n\n  renderImage = (profileAvatar, classes) => {\n    if (profileAvatar.length < 1) {\n    } else {\n      return <CardMedia className={classes.media} image={profileAvatar} />\n    }\n  }\n  render () {\n    const { classes } = this.props\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label='Recipe' className={classes.avatar}>\n              {this.props.profileName.charAt(0)}\n            </Avatar>\n          }\n          title={this.props.profileName}\n        />\n        {this.renderImage(this.props.profileAvatar, classes)}\n      </Card>\n    )\n  }\n}\n\nCardProfile.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  const { profileAvatar, profileName, githubURL } = state.profile\n\n  return { profileAvatar, profileName, githubURL }\n}\nexport default connect(\n  mapStateToProps,\n  { fetchUserDataFromGithubAPI }\n)(withStyles(styles)(CardProfile))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport Button from '@material-ui/core/Button'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport MailIcon from '@material-ui/icons/Mail'\nimport CardProfile from '../CardProfile/CardProfile'\n\nconst styles = {\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  },\n  ButtonColor: {\n    color: '#FFFFFF'\n  }\n}\n\nclass SideNav extends React.Component {\n  state = {\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }\n\n  toggleDrawer = (side, open) => () => {\n    this.setState({\n      [side]: open\n    })\n  }\n\n  render () {\n    const { classes } = this.props\n\n    const sideList = (\n      <div className={classes.list}>\n        <List>\n          <CardProfile />\n          {['Inbox', 'Subscription', 'Notifications', 'Sign Out'].map(\n            (text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n        </List>\n      </div>\n    )\n\n    return (\n      <div>\n        <Button\n          className={classes.ButtonColor}\n          onClick={this.toggleDrawer('left', true)}\n        >\n          profile\n        </Button>\n        <Drawer\n          open={this.state.left}\n          onClose={this.toggleDrawer('left', false)}\n        >\n          <div\n            tabIndex={0}\n            role='button'\n            onClick={this.toggleDrawer('left', false)}\n            onKeyDown={this.toggleDrawer('left', false)}\n          >\n            {sideList}\n          </div>\n        </Drawer>\n      </div>\n    )\n  }\n}\n\nSideNav.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SideNav)\n","const styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1,\n    width: 450\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  ButtonContainer: {\n    textAlign: 'right'\n  },\n  navbarColor: {\n    backgroundColor: '#98c1d9'\n  }\n}\n\nexport default styles\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { signOutUser, showRepositories, showNotification, showOrganizations, fetchNotifications } from '../../actions';\nimport _ from 'lodash';\n\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport SideNav from '../SideNav/SideNav';\nimport styles from './Navbar.style';\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\n\nclass Navbar extends Component {\n\tcomponentWillMount() {\n\t\tthis.props.fetchNotifications();\n\t}\n\tsignOutAttempt = () => {\n\t\tthis.props.signOutUser();\n\t};\n\n\ttoggelNotification = () => {\n\t\tthis.props.showNotification();\n\t};\n\n\ttoggelRepositories = () => {\n\t\tthis.props.showRepositories();\n\t};\n\n\ttoggelOrganizations = () => {\n\t\tthis.props.showOrganizations();\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<AppBar color=\"primary\" className={classes.navbarColor} position=\"static\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Typography className={classes.grow} variant=\"h6\" color=\"inherit\">\n\t\t\t\t\t\t\t\tGithub Dashboard\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<SideNav />\n\n\t\t\t\t\t\t<div className={classes.ButtonContainer}>\n\t\t\t\t\t\t\t<Button onClick={this.toggelOrganizations} color=\"inherit\">\n\t\t\t\t\t\t\t\tOrganizations\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.toggelRepositories} color=\"inherit\">\n\t\t\t\t\t\t\t\tRepositories\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t<Button onClick={this.signOutAttempt} color=\"inherit\">\n\t\t\t\t\t\t\t\tSign out\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\tclassName={classes.margin}\n\t\t\t\t\t\t\t\tonClick={this.toggelNotification}\n\t\t\t\t\t\t\t\tbadgeContent={this.props.notifications.length}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MailIcon />\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nNavbar.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst notifications = _.map(state.notification, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { notifications };\n};\n\nexport default connect(mapStateToProps, {\n\tsignOutUser,\n\tshowRepositories,\n\tshowNotification,\n\tshowOrganizations,\n\tfetchNotifications\n})(withStyles(styles)(Navbar));\n","import {\n  SHOW_NOTIFICATIONS,\n  SHOW_REPOSITORIES,\n  SHOW_ORGANIZATION\n} from './types'\n\nexport const showNotification = () => {\n  return dispatch => {\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: true })\n  }\n}\n\nexport const showRepositories = () => {\n  return dispatch => {\n    dispatch({ type: SHOW_REPOSITORIES, payload: true })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n  }\n}\n\nexport const showOrganizations = () => {\n  return dispatch => {\n    dispatch({ type: SHOW_REPOSITORIES, payload: false })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n    dispatch({ type: SHOW_ORGANIZATION, payload: true })\n  }\n}\n","const styles = {\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  gridList: {\n    width: 800,\n    height: 750\n  },\n  button: {\n    backgroundColor: '#FFF',\n    marginRight: 20\n  },\n  headerText: {\n    textAlign: 'center'\n  }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchReposDataGithubAPI, addWebhook, fetchOrgsDataGithubAPI } from '../../actions';\nimport _ from 'lodash';\nimport examplePic from '../../assets/examplepic.jpg';\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListHeader from '@material-ui/core/ListSubheader';\nimport Button from '@material-ui/core/Button';\n\n// Styles\nimport styles from './RepoList.Style';\n\nclass RepoList extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchReposDataGithubAPI();\n\t}\n\n\taddWebHooks = (webhookURL) => {\n\t\tthis.props.addWebhook(webhookURL);\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<GridList cellHeight={180} className={classes.gridList}>\n\t\t\t\t\t<GridListTile key=\"header\" cols={2} style={{ height: 'auto' }}>\n\t\t\t\t\t\t<ListHeader className={classes.headerText} component=\"div\">\n\t\t\t\t\t\t\tGithub Repositories\n\t\t\t\t\t\t</ListHeader>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t\t{this.props.repos.map((repos) => (\n\t\t\t\t\t\t<GridListTile key={repos.id}>\n\t\t\t\t\t\t\t<img src={examplePic} alt={repos.name} />\n\t\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\t\ttitle={repos.name}\n\t\t\t\t\t\t\t\tsubtitle={<span>by: {repos.owner}</span>}\n\t\t\t\t\t\t\t\tactionIcon={\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.addWebHooks(repos.hooks_url)}\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSubscribe\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GridListTile>\n\t\t\t\t\t))}\n\t\t\t\t</GridList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRepoList.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst repos = _.map(state.repos, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { repos };\n};\n\nexport default connect(mapStateToProps, {\n\tfetchReposDataGithubAPI,\n\taddWebhook,\n\tfetchOrgsDataGithubAPI\n})(withStyles(styles)(RepoList));\n","const styles = {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      overflow: 'hidden'\n    },\n    gridList: {\n      width: 800,\n      height: 750\n    },\n    button: {\n      backgroundColor: '#FFF',\n      marginRight: 20\n    },\n    backButton: {\n      backgroundColor: '#6699CC',\n      marginRight: 20\n    },\n    headerText: {\n      textAlign: 'center'\n    }\n  }\n  \n  export default styles\n  ","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  fetchReposDataGithubAPI,\n  addWebhook,\n  fetchOrgsDataGithubAPI,\n  fetchReposInOrg\n} from '../../actions'\nimport _ from 'lodash'\nimport examplePic from '../../assets/examplepic.jpg'\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport ListHeader from '@material-ui/core/ListSubheader'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport styles from './OrgsList.style'\n\nclass RepoList extends React.Component {\n  componentDidMount() {\n    this.props.fetchOrgsDataGithubAPI()\n  }\n\n  addWebHooks = name => {\n    let orgName = name\n\n    this.props.fetchReposInOrg(orgName)\n  }\n\n  renderOrgs = () => {\n    this.props.fetchOrgsDataGithubAPI()\n  }\n\n\n  checkIfAdmin = (orgs, classes) => {\n    if (orgs.admin === true || orgs.repos_url) {\n      return (<Button\n        onClick={() => this.addWebHooks(orgs.name)}\n        variant='contained'\n        className={classes.button}\n      >\n        View\n</Button>)\n    } else {\n      return (<Button\n        variant='contained'\n        className={classes.button}\n      >\n        Not admin\n</Button>)\n    }\n  }\n\n  checkIfAvatar = avatar => {\n    if (avatar === undefined) {\n      return examplePic\n    } else {\n      return avatar\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <GridList cellHeight={180} className={classes.gridList}>\n          <GridListTile key='header' cols={2} style={{ height: 'auto' }}>\n            <ListHeader className={classes.headerText} component='div'>\n              Github Organizations\n            </ListHeader>\n          </GridListTile>\n          {this.props.orgs.map(orgs => (\n            <GridListTile key={orgs.name}>\n              <img src={this.checkIfAvatar(orgs.avatar_url)} alt={'avatar'} />\n              <GridListTileBar\n                title={orgs.name}\n                key={orgs.name}\n                subtitle={<span> {orgs.url}</span>}\n                actionIcon={\n                  this.checkIfAdmin(orgs, classes)\n                }\n              />\n            </GridListTile>\n          ))}\n          <Button\n            onClick={() => this.renderOrgs()}\n            variant='contained'\n            className={classes.backButton}\n          >\n            Back\n          </Button>\n        </GridList>\n      </div>\n    )\n  }\n}\n\nRepoList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  const orgs = _.map(state.orgs, val => {\n    return { ...val }\n  })\n\n  return { orgs }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchReposDataGithubAPI,\n    addWebhook,\n    fetchOrgsDataGithubAPI,\n    fetchReposInOrg\n  }\n)(withStyles(styles)(RepoList))\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {} from '../../actions';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n\troot: {\n\t\tmaxWidth: 360,\n\t\tmarginTop: '3%',\n\t\tmargin: 'auto',\n\t\twidth: '50‰',\n\t\ttextAlign: 'center',\n\t\tbackgroundColor: theme.palette.background.paper\n\t},\n\tButton: {\n\t\tmarginTop: 10,\n\t\tmarginRight: 110\n\t}\n});\n\nclass FolderList extends React.Component {\n\trenderIfNotification = (notifications) => {\n\t\tif (notifications.length === 0) {\n\t\t\treturn (\n\t\t\t\t<Typography variant=\"overline\" gutterBottom>\n\t\t\t\t\tNo new notifications\n\t\t\t\t</Typography>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{this.props.notifications.map((notification) => (\n\t\t\t\t\t\t<List key={notification.eventURL}>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<Avatar>\n\t\t\t\t\t\t\t\t\t<ImageIcon />\n\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={notification.notification.title}\n\t\t\t\t\t\t\t\t\tsecondary={notification.notification.body}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t))}\n\t\t\t\t\t<Button color=\"outlined\">clear notifications</Button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn <div className={classes.root}>{this.renderIfNotification(this.props.notifications)}</div>;\n\t}\n}\n\nFolderList.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst notifications = _.map(state.notification, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { notifications };\n};\n\nexport default connect(mapStateToProps, {})(withStyles(styles)(FolderList));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {} from '../../actions';\n// Components\nimport Navbar from '../Navbar/Navbar';\nimport RepoList from '../RepoList/RepoList';\nimport OrgsList from '../OrgsList/OrgsList';\nimport Notifcations from '../Notifications/Notifications';\nimport { checkIfUserIsLoggedIn, fetchNotifications } from '../../actions';\nimport firebase from '../../config/firebase';\nlet db = firebase.firestore();\n\nclass Dashboard extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.checkIfUserIsLoggedIn();\n\t\tthis.props.fetchNotifications();\n\n\t\tconst messaging = firebase.messaging();\n\t\tmessaging\n\t\t\t.requestPermission()\n\t\t\t.then(() => {\n\t\t\t\tconsole.log('have permission');\n\t\t\t\treturn messaging.getToken();\n\t\t\t})\n\t\t\t.then((token) => {\n\t\t\t\tlet user = firebase.auth().currentUser;\n\n\t\t\t\tlet userRef = db.collection('users').doc(user.providerData[0].uid);\n\n\t\t\t\tlet setWithMerge = userRef.set(\n\t\t\t\t\t{\n\t\t\t\t\t\tmsgToken: token\n\t\t\t\t\t},\n\t\t\t\t\t{ merge: true }\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\t// messaging.onMessage((payload) => {\n\t\t// \tconsole.log('onMesage', payload);\n\t\t// });\n\t}\n\trenderRepoOrNotificatin = () => {\n\t\tif (this.props.toggel.showNotifications === true) {\n\t\t\treturn <Notifcations />;\n\t\t} else if (this.props.toggel.showRepositories === true) {\n\t\t\treturn <RepoList />;\n\t\t} else if (this.props.toggel.showOrganization === true) {\n\t\t\treturn <OrgsList />;\n\t\t}\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t{this.renderRepoOrNotificatin()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn state;\n};\n\nexport default connect(mapStateToProps, { checkIfUserIsLoggedIn, fetchNotifications })(Dashboard);\n","import React, { Component } from 'react'\n\nclass NotFound extends Component {\n  render () {\n    return (\n      <div>\n        <p>Page Not FOund </p>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from './config/history';\nimport { Provider } from 'react-redux';\nimport store from './config/store';\nimport Main from './components/Main';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport NotFound from './components/NotFound/NotFound';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<Router history={history}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Main} />\n\t\t\t\t\t\t\t<Route exact path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nif ('serviceWorker' in navigator) {\n\tnavigator.serviceWorker\n\t\t.register('../firebase-messaging-sw.js')\n\t\t.then(function(registration) {\n\t\t\tconsole.log('Registration successful, scope is:', registration.scope);\n\t\t})\n\t\t.catch(function(err) {\n\t\t\tconsole.log('Service worker registration failed, error:', err);\n\t\t});\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/examplepic.2bf7cacd.jpg\";"],"sourceRoot":""}