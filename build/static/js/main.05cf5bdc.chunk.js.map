{"version":3,"sources":["config/history.js","reducers/authReducer.js","reducers/profileReducer.js","reducers/reposReducer.js","reducers/orgsReducer.js","reducers/notificationsReducer.js","reducers/toggelReducer.js","reducers/index.js","actions/types.js","config/store.js","config/firebase.js","actions/FetchUserDataActions.js","actions/SubscriptionActions.js","actions/NotificationsAction.js","components/Main.style.js","components/Main.js","actions/AuthActions.js","components/CardProfile/CardProfile.style.js","components/CardProfile/CardProfile.js","components/SideNav/SideNav.js","components/Navbar/Navbar.style.js","components/Navbar/Navbar.js","actions/ToggelActions.js","components/RepoList/RepoList.Style.js","components/RepoList/RepoList.js","components/OrgsList/OrgsList.style.js","components/OrgsList/OrgsList.js","components/Notifications/Notifications.js","components/Dashboard/Dashboard.js","components/NotFound/NotFound.js","App.js","index.js","assets/examplepic.jpg"],"names":["createHistory","initialState","isAuthenticated","profileAvatar","profileName","githubURL","name","showNotifications","showRepositories","showOrganization","combineReducers","auth","state","arguments","length","undefined","type","Object","objectSpread","profile","action","payload","avatar_url","url","repos","orgs","notification","toggel","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","fetchOrgsDataGithubAPI","dispatch","orgsToFilter","accessToken","window","localStorage","getItem","fetch","headers","Authorization","then","response","json","data","keys","i","k","hooks_url","id","login","repos_url","push","fetchReposDataGithubAPI","arrayToFilter","owner","admin","permissions","arr","filter","child","addWebhook","firestore","webhookURL","console","log","events","config","content_type","method","body","JSON","stringify","Content-Type","catch","err","db","styles","containerStyle","marginTop","textAlign","width","root","maxWidth","text","fontSize","color","Main","signInAttempt","_this","props","signInUser","classes","this","react_default","a","createElement","className","Typography_default","component","variant","gutterBottom","Button_default","onClick","size","React","Component","connect","userData","provider","Firebase","GithubAuthProvider","addScope","signInWithPopup","result","credential","setItem","history","error","errorCode","errorMessage","concat","withStyles","theme","card","media","height","paddingTop","actions","display","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","CardProfile","renderImage","CardMedia_default","image","fetchUserDataFromGithubAPI","Card_default","CardHeader_default","Avatar_default","aria-label","charAt","title","_state$profile","SideNav","top","left","bottom","right","toggleDrawer","side","open","setState","defineProperty","sideList","list","List_default","components_CardProfile_CardProfile","map","index","ListItem_default","button","key","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","ButtonColor","Drawer_default","onClose","tabIndex","role","onKeyDown","fullList","flexGrow","grow","menuButton","marginRight","ButtonContainer","navbarColor","Navbar","signOutAttempt","signOutUser","toggelNotification","showNotification","toggelRepositories","toggelOrganizations","showOrganizations","AppBar_default","position","Toolbar_default","components_SideNav_SideNav","signOut","flexWrap","justifyContent","overflow","gridList","headerText","RepoList","addWebHooks","_this2","GridList_default","cellHeight","GridListTile_default","cols","style","ListSubheader_default","src","examplePic","alt","GridListTileBar_default","subtitle","actionIcon","_","val","backButton","orgName","fetchReposInOrg","renderOrgs","checkIfAdmin","checkIfAvatar","adminReposInOrg","reposInOrg","FolderList","deleteNotificationsButton","deleteNotifications","fetchNotifications","notifications","eventURL","Image_default","secondary","Button","collection","doc","delete","repoIDFromUser","notificationArray","matchedNotificationWithUserArray","userID","currentUser","providerData","uid","get","exists","repositoryID","querySnapshot","forEach","el","repoObj","margin","palette","background","paper","Dashboard","renderRepoOrNotificatin","Notifications","components_RepoList_RepoList","OrgsList","checkIfUserIsLoggedIn","messaging","requestPermission","getToken","token","user","set","msgToken","merge","onMessage","components_Navbar_Navbar","onAuthStateChanged","NotFound","App","es","Router","Switch","Route","exact","path","navigator","serviceWorker","register","registration","scope","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.05cf5bdc.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory()","import { LOGGED_IN_SUCCES, SIGN_OUT } from '../actions/types'\n\nconst initialState = {\n  isAuthenticated: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOGGED_IN_SUCCES:\n      return {\n        ...state,\n        isAuthenticated: true\n      }\n\n    case SIGN_OUT:\n      return {\n        ...state,\n        isAuthenticated: false\n      }\n\n    default:\n      return state\n  }\n}\n","import { GET_USER_PROFILE_DATA } from '../actions/types'\n\nconst initialState = {\n  profileAvatar: '',\n  profileName: '',\n  githubURL: ''\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_USER_PROFILE_DATA:\n      return {\n        ...state,\n        profileAvatar: action.payload.avatar_url,\n        profileName: action.payload.name,\n        githubURL: action.payload.url\n      }\n\n    default:\n      return state\n  }\n}\n","import { GET_REPOS_DATA } from '../actions/types'\n\nconst initialState = {\n  name: ''\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_REPOS_DATA:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import { GET_ORGS_DATA, GET_REPOS_IN_ORGS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ORGS_DATA:\n      return action.payload\n\n    case GET_REPOS_IN_ORGS:\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","import { FETCH_NOTIFICATIONS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_NOTIFICATIONS:\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","import {\n  SHOW_NOTIFICATIONS,\n  SHOW_REPOSITORIES,\n  SHOW_ORGANIZATION\n} from '../actions/types'\n\nconst initialState = {\n  showNotifications: false,\n  showRepositories: true,\n  showOrganization: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SHOW_NOTIFICATIONS:\n      return {\n        ...state,\n        showNotifications: action.payload\n      }\n\n    case SHOW_REPOSITORIES:\n      return {\n        ...state,\n        showRepositories: action.payload\n      }\n\n    case SHOW_ORGANIZATION:\n      return {\n        ...state,\n        showOrganization: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport authReducer from './authReducer'\nimport profileReducer from './profileReducer'\nimport reposReducer from './reposReducer'\nimport orgsReducer from './orgsReducer'\nimport notificationsReducer from './notificationsReducer'\nimport toggelReducers from './toggelReducer'\n\nexport default combineReducers({\n  auth: authReducer,\n  profile: profileReducer,\n  repos: reposReducer,\n  orgs: orgsReducer,\n  notification: notificationsReducer,\n  toggel: toggelReducers\n})\n","// auth\nexport const TEST_DISPATCH = 'TEST_DISPATCH'\nexport const LOGGED_IN_SUCCES = 'LOGGED_IN_SUCCESS'\nexport const SIGN_OUT = 'SIGN_OUT'\n\n// profile\nexport const GET_USER_PROFILE_DATA = 'GET_USER_PROFILE_DATA'\n\n// Repos / Orgs\nexport const GET_REPOS_DATA = 'GET_REPOS_DATA'\nexport const GET_ORGS_DATA = 'GET_ORGS_DATA'\nexport const GET_REPOS_IN_ORGS = 'GET_REPOS_IN_ORGS'\n\n// Webhook\nexport const ADD_WEBHOOK = 'ADD_WEBHOOK'\n\n// Notifications\nexport const FETCH_NOTIFICATIONS = 'FETCH_NOTIFICATIONS'\nexport const DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS'\n\n// Toggel\nexport const SHOW_NOTIFICATIONS = 'SHOW_NOTIFICATIONS'\nexport const SHOW_REPOSITORIES = 'SHOW_REPOSITORIES'\nexport const SHOW_ORGANIZATION = 'SHOW_ORGANIZATION'\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers/index'\nconst middleware = [thunk]\nconst initialState = {}\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n)\n\nexport default store\n","import * as firebase from 'firebase'\n\nconst config = {\n  apiKey: 'AIzaSyBr2zjlkIdRl2TwTN2OOsA85AW8NeHBI2k',\n  authDomain: 'guthubdashboard.firebaseapp.com',\n  databaseURL: 'https://guthubdashboard.firebaseio.com',\n  projectId: 'guthubdashboard',\n  storageBucket: 'guthubdashboard.appspot.com',\n  messagingSenderId: '259327836521'\n}\n\nexport default firebase.initializeApp(config)\n","import {\n  GET_USER_PROFILE_DATA,\n  GET_REPOS_DATA,\n  GET_ORGS_DATA,\n  GET_REPOS_IN_ORGS\n} from './types'\n\nexport const fetchUserDataFromGithubAPI = () => {\n  return dispatch => {\n    const accessToken = window.localStorage.getItem('token')\n    window\n      .fetch('https://api.github.com/user', {\n        headers: { Authorization: 'token ' + accessToken }\n      })\n      .then(response => response.json())\n      .then(data => {\n        dispatch({ type: GET_USER_PROFILE_DATA, payload: data })\n      })\n  }\n}\n\nexport const fetchOrgsDataGithubAPI = () => {\n  return dispatch => {\n    const orgsToFilter = []\n    const accessToken = window.localStorage.getItem('token')\n\n    window\n      .fetch('https://api.github.com/user/orgs', {\n        headers: { Authorization: 'token ' + accessToken }\n      })\n      .then(response => response.json())\n      .then(data => {\n        let keys = Object.keys(data)\n\n\n        for (var i = 0; i < keys.length; i++) {\n          let k = keys[i]\n          let avatar_url = data[k].avatar_url\n          let hooks_url = data[k].hooks_url\n          let id = data[k].id\n          let name = data[k].login\n          let url = data[k].url\n          let repos_url = data[k].url\n\n          var orgs = {\n            avatar_url: '',\n            hooks_url: '',\n            id: '',\n            url: '',\n            name: '',\n            repos_url: ''\n          }\n\n          orgs.avatar_url = avatar_url\n          orgs.hooks_url = hooks_url\n          orgs.id = id\n          orgs.name = name\n          orgs.url = url\n          orgs.repos_url = repos_url\n\n          orgsToFilter.push(orgs)\n        }\n\n        dispatch({ type: GET_ORGS_DATA, payload: orgsToFilter })\n      })\n  }\n}\n\nexport const fetchReposDataGithubAPI = () => {\n  return dispatch => {\n    const arrayToFilter = []\n    const accessToken = window.localStorage.getItem('token')\n\n\n    window\n      .fetch('https://api.github.com/user/repos', {\n        headers: { Authorization: 'token ' + accessToken }\n      })\n      .then(response => response.json())\n      .then(data => {\n        let keys = Object.keys(data)\n\n        for (var i = 0; i < keys.length; i++) {\n          let k = keys[i]\n          let name = data[k].name\n          let hooks_url = data[k].hooks_url\n          let url = data[k].url\n          let owner = data[k].owner.login\n          let id = data[k].id\n          let admin = data[k].permissions.admin\n\n          var repos = {\n            name: '',\n            hooks_url: '',\n            url: '',\n            owner: '',\n            id: '',\n            admin: ''\n          }\n\n          repos.name = name\n          repos.hooks_url = hooks_url\n          repos.url = url\n          repos.owner = owner\n          repos.id = id\n          repos.admin = admin\n\n          arrayToFilter.push(repos)\n        }\n\n        let arr = arrayToFilter.filter(child => child.admin === true)\n        dispatch({ type: GET_REPOS_DATA, payload: arr })\n      })\n  }\n}\n\nexport const fetchReposInOrg = orgName => {\n  return dispatch => {\n\n    let adminReposInOrg = []\n    window\n      .fetch(`https://api.github.com/orgs/${orgName}/repos`)\n      .then(response => response.json())\n      .then(data => {\n\n        let keys = Object.keys(data)\n\n        for (var i = 0; i < keys.length; i++) {\n          let k = keys[i]\n          let name = data[k].name\n          let hooks_url = data[k].hooks_url\n          let url = data[k].url\n          let owner = data[k].owner.login\n          let id = data[k].id\n          let admin = data[k].permissions.admin\n\n\n\n          var reposInOrg = {\n            name: '',\n            hooks_url: '',\n            url: '',\n            owner: '',\n            id: '',\n            admin: admin\n          }\n\n          reposInOrg.name = name\n          reposInOrg.hooks_url = hooks_url\n          reposInOrg.url = url\n          reposInOrg.owner = owner\n          reposInOrg.id = id\n          reposInOrg.admin = admin\n\n          adminReposInOrg.push(reposInOrg)\n        }\n\n\n\n        dispatch({ type: GET_REPOS_IN_ORGS, payload: adminReposInOrg })\n      })\n  }\n}\n","import { ADD_WEBHOOK } from './types';\nimport firebase from '../config/firebase';\nvar db = firebase.firestore();\n\nexport const addWebhook = (webhookURL) => {\n\treturn (dispatch) => {\n\t\tconst accessToken = window.localStorage.getItem('token');\n\n\t\tlet configData = {\n\t\t\turl: 'https://us-central1-guthubdashboard.cloudfunctions.net/events',\n\t\t\tcontent_type: 'json'\n\t\t};\n\n\t\tconsole.log(webhookURL);\n\n\t\tlet data = { events: [ 'issues' ], name: 'web', config: configData };\n\n\t\twindow\n\t\t\t.fetch(webhookURL, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'token ' + accessToken,\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({ type: ADD_WEBHOOK, payload: data });\n\n\t\t\t\tconsole.log(data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n};\n\nexport const deleteWebhook = (webhookURL) => {\n\treturn (dispatch) => {};\n};\n","import { FETCH_NOTIFICATIONS, DELETE_NOTIFICATIONS } from './types';\nimport firebase from '../config/firebase';\nlet db = firebase.firestore();\n\nexport const fetchNotifications = () => {\n\treturn (dispatch) => {\n\t\tlet repoIDFromUser;\n\t\tlet notificationArray = [];\n\t\tvar matchedNotificationWithUserArray = [];\n\t\tlet currentUser = firebase.auth().currentUser;\n\t\tlet userID = currentUser.providerData[0].uid;\n\n\t\tvar docRef = db.doc(`users/${userID}`).get().then((doc) => {\n\t\t\tif (doc.exists) {\n\t\t\t\trepoIDFromUser = doc.data().repositoryID;\n\t\t\t}\n\t\t});\n\n\t\tdb.collection('notifications').get().then((querySnapshot) => {\n\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\tnotificationArray.push(doc.data().notification);\n\t\t\t});\n\n\t\t\trepoIDFromUser.forEach((repositoryID) => {\n\t\t\t\tnotificationArray.filter(function(el) {\n\t\t\t\t\tif (el.repositoryID == repositoryID) {\n\t\t\t\t\t\tconst repoObj = {\n\t\t\t\t\t\t\ttitle: el.title,\n\t\t\t\t\t\t\tbody: el.body\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmatchedNotificationWithUserArray.push(repoObj);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tdispatch({ type: FETCH_NOTIFICATIONS, payload: matchedNotificationWithUserArray });\n\t\t});\n\t};\n};\n\nexport const deleteNotifications = () => {\n\treturn (dispatch) => {\n\t\tdb\n\t\t\t.collection('notifications')\n\t\t\t.doc('{notification}')\n\t\t\t.delete()\n\t\t\t.then(() => {\n\t\t\t\tconsole.log('Document successfully deleted!');\n\t\t\t\tdispatch({ type: DELETE_NOTIFICATIONS });\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error removing document: ', error);\n\t\t\t});\n\t};\n};\n","const styles = {\n  containerStyle: {\n    marginTop: '20%',\n    textAlign: 'center',\n    width: '100%'\n  },\n  root: {\n    width: '100%',\n    maxWidth: 500\n  },\n  text: {\n    fontSize: 100,\n    color: 'black',\n    textAlign: 'center'\n  }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { signInUser } from '../actions';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './Main.style';\n\nclass Main extends React.Component {\n\tsignInAttempt = () => {\n\t\tthis.props.signInUser();\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.containerStyle}>\n\t\t\t\t<Typography component=\"h2\" variant=\"h2\" gutterBottom>\n\t\t\t\t\tWelcome To Guthub Dashboard\n\t\t\t\t</Typography>\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={this.signInAttempt} color=\"primary\" size=\"large\" variant=\"outlined\">\n\t\t\t\t\t\tLog in{' '}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nMain.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default connect(null, { signInUser })(withStyles(styles)(Main));\n","import { LOGGED_IN_SUCCES, SIGN_OUT } from './types';\nimport firebase from '../config/firebase';\nimport history from '../config/history';\nimport * as Firebase from 'firebase';\n\nexport const checkIfUserIsLoggedIn = () => {\n\treturn (dispatch) => {\n\t\tfirebase.auth().onAuthStateChanged(function(user) {\n\t\t\tif (user) {\n\t\t\t\tlet userID = user.providerData[0].uid;\n\t\t\t\t//checkIfUserOnline(userID);\n\t\t\t\tdispatch({ type: LOGGED_IN_SUCCES, payload: true });\n\t\t\t\thistory.push('/dashboard');\n\t\t\t} else {\n\t\t\t\tdispatch({ type: SIGN_OUT, payload: false });\n\t\t\t}\n\t\t});\n\t};\n};\n\nexport const signInUser = (userData) => {\n\treturn (dispatch) => {\n\t\tlet provider = new Firebase.auth.GithubAuthProvider();\n\n\t\tprovider.addScope('user');\n\t\tprovider.addScope('repo');\n\n\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.signInWithPopup(provider)\n\t\t\t.then(function(result) {\n\t\t\t\tdispatch({ type: LOGGED_IN_SUCCES, payload: true });\n\t\t\t\tlet accessToken = result.credential.accessToken;\n\t\t\t\twindow.localStorage.setItem('token', accessToken);\n\t\t\t\thistory.push('/dashboard');\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tlet { errorCode, errorMessage } = error;\n\t\t\t\tconsole.log(\n\t\t\t\t\t`Something went wrong please check your credentials or try again. error message : ${errorMessage} - ${errorCode}`\n\t\t\t\t);\n\t\t\t});\n\t};\n};\n\nexport const signOutUser = (userData) => {\n\treturn (dispatch) => {\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.signOut()\n\t\t\t.then(function() {\n\t\t\t\tdispatch({ type: SIGN_OUT, payload: false });\n\t\t\t\tconsole.log('sign out succesfull');\n\t\t\t\thistory.push('/');\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log('error accurred' + error);\n\t\t\t});\n\t};\n};\n","const styles = theme => ({\n  card: {\n    maxWidth: 400\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n  },\n  actions: {\n    display: 'flex'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: '#6699CC',\n    fontSize: '12'\n  }\n})\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchUserDataFromGithubAPI } from '../../actions'\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Avatar from '@material-ui/core/Avatar'\n\n// Styles\nimport styles from './CardProfile.style'\n\nclass CardProfile extends React.Component {\n  componentDidMount () {\n    this.props.fetchUserDataFromGithubAPI()\n  }\n\n  renderImage = (profileAvatar, classes) => {\n    if (profileAvatar.length < 1) {\n    } else {\n      return <CardMedia className={classes.media} image={profileAvatar} />\n    }\n  }\n  render () {\n    const { classes } = this.props\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label='Recipe' className={classes.avatar}>\n              {this.props.profileName.charAt(0)}\n            </Avatar>\n          }\n          title={this.props.profileName}\n        />\n        {this.renderImage(this.props.profileAvatar, classes)}\n      </Card>\n    )\n  }\n}\n\nCardProfile.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  const { profileAvatar, profileName, githubURL } = state.profile\n\n  return { profileAvatar, profileName, githubURL }\n}\nexport default connect(\n  mapStateToProps,\n  { fetchUserDataFromGithubAPI }\n)(withStyles(styles)(CardProfile))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport Button from '@material-ui/core/Button'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport MailIcon from '@material-ui/icons/Mail'\nimport CardProfile from '../CardProfile/CardProfile'\n\nconst styles = {\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  },\n  ButtonColor: {\n    color: '#FFFFFF'\n  }\n}\n\nclass SideNav extends React.Component {\n  state = {\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }\n\n  toggleDrawer = (side, open) => () => {\n    this.setState({\n      [side]: open\n    })\n  }\n\n  render () {\n    const { classes } = this.props\n\n    const sideList = (\n      <div className={classes.list}>\n        <List>\n          <CardProfile />\n          {['Inbox', 'Subscription', 'Notifications', 'Sign Out'].map(\n            (text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n        </List>\n      </div>\n    )\n\n    return (\n      <div>\n        <Button\n          className={classes.ButtonColor}\n          onClick={this.toggleDrawer('left', true)}\n        >\n          profile\n        </Button>\n        <Drawer\n          open={this.state.left}\n          onClose={this.toggleDrawer('left', false)}\n        >\n          <div\n            tabIndex={0}\n            role='button'\n            onClick={this.toggleDrawer('left', false)}\n            onKeyDown={this.toggleDrawer('left', false)}\n          >\n            {sideList}\n          </div>\n        </Drawer>\n      </div>\n    )\n  }\n}\n\nSideNav.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SideNav)\n","const styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1,\n    width: 450\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  ButtonContainer: {\n    textAlign: 'right'\n  },\n  navbarColor: {\n    backgroundColor: '#98c1d9'\n  }\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  signOutUser,\n  showRepositories,\n  showNotification,\n  showOrganizations\n} from '../../actions'\n\n// Styles\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport SideNav from '../SideNav/SideNav'\nimport styles from './Navbar.style'\n\nclass Navbar extends Component {\n  signOutAttempt = () => {\n    this.props.signOutUser()\n  }\n\n  toggelNotification = () => {\n    this.props.showNotification()\n  }\n\n  toggelRepositories = () => {\n    this.props.showRepositories()\n  }\n\n  toggelOrganizations = () => {\n    this.props.showOrganizations()\n  }\n\n  render () {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <AppBar color='primary' className={classes.navbarColor} position='static'>\n          <Toolbar>\n            <div>\n              <Typography className={classes.grow} variant='h6' color='inherit'>\n                Github Dashboard\n              </Typography>\n            </div>\n            <SideNav />\n\n            <div className={classes.ButtonContainer}>\n              <Button onClick={this.toggelOrganizations} color='inherit'>\n                Organizations\n              </Button>\n              <Button onClick={this.toggelRepositories} color='inherit'>\n                Repositories\n              </Button>\n              <Button onClick={this.toggelNotification} color='inherit'>\n                Notifications\n              </Button>\n              <Button onClick={this.signOutAttempt} color='inherit'>\n                Sign out\n              </Button>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default connect(\n  null,\n  { signOutUser, showRepositories, showNotification, showOrganizations }\n)(withStyles(styles)(Navbar))\n","import {\n  SHOW_NOTIFICATIONS,\n  SHOW_REPOSITORIES,\n  SHOW_ORGANIZATION\n} from './types'\n\nexport const showNotification = () => {\n  return dispatch => {\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: true })\n  }\n}\n\nexport const showRepositories = () => {\n  return dispatch => {\n    dispatch({ type: SHOW_REPOSITORIES, payload: true })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n  }\n}\n\nexport const showOrganizations = () => {\n  return dispatch => {\n    dispatch({ type: SHOW_REPOSITORIES, payload: false })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n    dispatch({ type: SHOW_ORGANIZATION, payload: true })\n  }\n}\n","const styles = {\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  gridList: {\n    width: 800,\n    height: 750\n  },\n  button: {\n    backgroundColor: '#FFF',\n    marginRight: 20\n  },\n  headerText: {\n    textAlign: 'center'\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  fetchReposDataGithubAPI,\n  addWebhook,\n  fetchOrgsDataGithubAPI\n} from '../../actions'\nimport _ from 'lodash'\nimport examplePic from '../../assets/examplepic.jpg'\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport ListHeader from '@material-ui/core/ListSubheader'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport styles from './RepoList.Style'\n\nclass RepoList extends React.Component {\n  componentDidMount() {\n    this.props.fetchReposDataGithubAPI()\n  }\n\n  addWebHooks = webhookURL => {\n    this.props.addWebhook(webhookURL)\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <GridList cellHeight={180} className={classes.gridList}>\n          <GridListTile key='header' cols={2} style={{ height: 'auto' }}>\n            <ListHeader className={classes.headerText} component='div'>\n              Github Repositories\n            </ListHeader>\n          </GridListTile>\n          {\n            this.props.repos.map(repos => (\n              <GridListTile key={repos.id}>\n                <img src={examplePic} alt={repos.name} />\n                <GridListTileBar\n                  title={repos.name}\n                  subtitle={<span>by: {repos.owner}</span>}\n                  actionIcon={\n                    <Button\n                      onClick={() => this.addWebHooks(repos.hooks_url)}\n                      variant='contained'\n                      className={classes.button}\n                    >\n                      Subscribe\n                  </Button>\n                  }\n                />\n              </GridListTile>\n            ))\n          }\n        </GridList>\n      </div>\n    )\n  }\n}\n\nRepoList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  const repos = _.map(state.repos, val => {\n    return { ...val }\n  })\n\n  return { repos }\n}\n\nexport default connect(\n  mapStateToProps,\n  { fetchReposDataGithubAPI, addWebhook, fetchOrgsDataGithubAPI }\n)(withStyles(styles)(RepoList))\n","const styles = {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      overflow: 'hidden'\n    },\n    gridList: {\n      width: 800,\n      height: 750\n    },\n    button: {\n      backgroundColor: '#FFF',\n      marginRight: 20\n    },\n    backButton: {\n      backgroundColor: '#6699CC',\n      marginRight: 20\n    },\n    headerText: {\n      textAlign: 'center'\n    }\n  }\n  \n  export default styles\n  ","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  fetchReposDataGithubAPI,\n  addWebhook,\n  fetchOrgsDataGithubAPI,\n  fetchReposInOrg\n} from '../../actions'\nimport _ from 'lodash'\nimport examplePic from '../../assets/examplepic.jpg'\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport ListHeader from '@material-ui/core/ListSubheader'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport styles from './OrgsList.style'\n\nclass RepoList extends React.Component {\n  componentDidMount() {\n    this.props.fetchOrgsDataGithubAPI()\n  }\n\n  addWebHooks = name => {\n    let orgName = name\n\n    this.props.fetchReposInOrg(orgName)\n  }\n\n  renderOrgs = () => {\n    this.props.fetchOrgsDataGithubAPI()\n  }\n\n\n  checkIfAdmin = (orgs, classes) => {\n    if (orgs.admin === true || orgs.repos_url) {\n      return (<Button\n        onClick={() => this.addWebHooks(orgs.name)}\n        variant='contained'\n        className={classes.button}\n      >\n        View\n</Button>)\n    } else {\n      return (<Button\n        variant='contained'\n        className={classes.button}\n      >\n        Not admin\n</Button>)\n    }\n  }\n\n  checkIfAvatar = avatar => {\n    if (avatar === undefined) {\n      return examplePic\n    } else {\n      return avatar\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <GridList cellHeight={180} className={classes.gridList}>\n          <GridListTile key='header' cols={2} style={{ height: 'auto' }}>\n            <ListHeader className={classes.headerText} component='div'>\n              Github Organizations\n            </ListHeader>\n          </GridListTile>\n          {this.props.orgs.map(orgs => (\n            <GridListTile key={orgs.name}>\n              <img src={this.checkIfAvatar(orgs.avatar_url)} alt={'avatar'} />\n              <GridListTileBar\n                title={orgs.name}\n                key={orgs.name}\n                subtitle={<span> {orgs.url}</span>}\n                actionIcon={\n                  this.checkIfAdmin(orgs, classes)\n                }\n              />\n            </GridListTile>\n          ))}\n          <Button\n            onClick={() => this.renderOrgs()}\n            variant='contained'\n            className={classes.backButton}\n          >\n            Back\n          </Button>\n        </GridList>\n      </div>\n    )\n  }\n}\n\nRepoList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  const orgs = _.map(state.orgs, val => {\n    return { ...val }\n  })\n\n  return { orgs }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchReposDataGithubAPI,\n    addWebhook,\n    fetchOrgsDataGithubAPI,\n    fetchReposInOrg\n  }\n)(withStyles(styles)(RepoList))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteNotifications, fetchNotifications } from '../../actions'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport ImageIcon from '@material-ui/icons/Image'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  root: {\n    maxWidth: 360,\n    marginTop: '3%',\n    margin: 'auto',\n    width: '50‰',\n    textAlign: 'center',\n    backgroundColor: theme.palette.background.paper\n  },\n  Button: {\n    marginTop: 10,\n    marginRight: 110\n  }\n})\n\nclass FolderList extends React.Component {\n  componentDidMount () {\n    this.props.fetchNotifications()\n  }\n  deleteNotificationsButton = () => {\n    this.props.deleteNotifications()\n  }\n  render () {\n    const { classes } = this.props\n    return (\n      <div className={classes.root}>\n        {this.props.notifications.map(notification => (\n          <List key={notification.eventURL}>\n            <ListItem>\n              <Avatar>\n                <ImageIcon />\n              </Avatar>\n              <ListItemText primary={notification.title} secondary={notification.body} />\n            </ListItem>\n          </List>\n        ))}\n        <Button\n          onClick={this.deleteNotificationsButton}\n          variant='contained'\n          color='primary'\n          className={classes.Button}\n        >\n          Delete Notifications\n        </Button>\n      </div>\n    )\n  }\n}\n\nFolderList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  const notifications = _.map(state.notification, val => {\n    return { ...val }\n  })\n\n  return { notifications }\n}\n\nexport default connect(\n  mapStateToProps,\n  { deleteNotifications, fetchNotifications }\n)(withStyles(styles)(FolderList))\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {} from '../../actions';\n// Components\nimport Navbar from '../Navbar/Navbar';\nimport RepoList from '../RepoList/RepoList';\nimport OrgsList from '../OrgsList/OrgsList';\nimport Notifcations from '../Notifications/Notifications';\nimport { checkIfUserIsLoggedIn } from '../../actions';\nimport firebase from '../../config/firebase';\nlet db = firebase.firestore();\n\nclass Dashboard extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.checkIfUserIsLoggedIn();\n\n\t\tconst messaging = firebase.messaging();\n\t\tmessaging\n\t\t\t.requestPermission()\n\t\t\t.then(() => {\n\t\t\t\tconsole.log('have permission');\n\t\t\t\treturn messaging.getToken();\n\t\t\t})\n\t\t\t.then((token) => {\n\t\t\t\tvar user = firebase.auth().currentUser;\n\n\t\t\t\tconsole.log(user.providerData[0].uid);\n\n\t\t\t\tvar userRef = db.collection('users').doc(user.providerData[0].uid);\n\n\t\t\t\tvar setWithMerge = userRef.set(\n\t\t\t\t\t{\n\t\t\t\t\t\tmsgToken: token\n\t\t\t\t\t},\n\t\t\t\t\t{ merge: true }\n\t\t\t\t);\n\n\t\t\t\tconsole.log(token);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\tmessaging.onMessage((payload) => {\n\t\t\tconsole.log('onMesage', payload);\n\t\t});\n\t}\n\trenderRepoOrNotificatin = () => {\n\t\tif (this.props.toggel.showNotifications === true) {\n\t\t\treturn <Notifcations />;\n\t\t} else if (this.props.toggel.showRepositories === true) {\n\t\t\treturn <RepoList />;\n\t\t} else if (this.props.toggel.showOrganization === true) {\n\t\t\treturn <OrgsList />;\n\t\t}\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t{this.renderRepoOrNotificatin()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn state;\n};\n\nexport default connect(mapStateToProps, { checkIfUserIsLoggedIn })(Dashboard);\n","import React, { Component } from 'react'\n\nclass NotFound extends Component {\n  render () {\n    return (\n      <div>\n        <p>Page Not FOund </p>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from './config/history';\nimport { Provider } from 'react-redux';\nimport store from './config/store';\nimport Main from './components/Main';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport NotFound from './components/NotFound/NotFound';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<Router history={history}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Main} />\n\t\t\t\t\t\t\t<Route exact path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nif ('serviceWorker' in navigator) {\n\tnavigator.serviceWorker\n\t\t.register('../firebase-messaging-sw.js')\n\t\t.then(function(registration) {\n\t\t\tconsole.log('Registration successful, scope is:', registration.scope);\n\t\t})\n\t\t.catch(function(err) {\n\t\t\tconsole.log('Service worker registration failed, error:', err);\n\t\t});\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/examplepic.2bf7cacd.jpg\";"],"sourceRoot":""}