{"version":3,"sources":["actions/AuthActions.js","actions/FetchUserDataActions.js","actions/NotificationsAction.js","actions/ToggelActions.js","actions/index.js","reducers/AuthReducer.js","reducers/ProfileReducer.js","reducers/ReposReducer.js","reducers/OrgsReducer.js","reducers/NotificationsReducer.js","reducers/ToggelReducer.js","reducers/SubscriptionReducer.js","reducers/index.js","config/store.js","components/Main.style.js","components/Main.js","utils/firebaseHelpers.js","components/Navbar/Navbar.style.js","components/Navbar/Navbar.js","components/RepoList/RepoList.Style.js","components/RepoList/RepoList.js","components/OrgsList/OrgsList.style.js","components/OrgsList/OrgsList.js","components/Notifications/Notifications.style.js","components/Notifications/Notifications.js","components/SubscriptionList/SubscriptionList.style.js","components/SubscriptionList/SubscriptionList.js","components/Profile/Profile.style.js","components/Profile/Profile.js","components/Dashboard/Dashboard.js","components/NotFound/NotFound.js","App.js","index.js","config/firebase.js","actions/types.js","config/history.js","utils/helpers.js"],"names":["__webpack_require__","d","__webpack_exports__","checkIfUserIsLoggedIn","signInUser","signOutUser","firebase__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","_utils_helpers__WEBPACK_IMPORTED_MODULE_2__","_config_firebase__WEBPACK_IMPORTED_MODULE_3__","_config_history__WEBPACK_IMPORTED_MODULE_4__","dispatch","firebase","auth","onAuthStateChanged","user","window","localStorage","setItem","providerData","uid","saveGithubIDToFireStore","type","LOGGED_IN_SUCCES","payload","history","push","SIGN_OUT","userData","provider","Firebase","GithubAuthProvider","addScope","signInWithPopup","then","result","accessToken","credential","setGitHubToken","catch","error","errorCode","errorMessage","console","log","concat","signOut","fetchUserDataFromGithubAPI","fetchOrgsDataGithubAPI","fetchReposDataGithubAPI","fetchReposInOrg","fetchSubscriptions","_types__WEBPACK_IMPORTED_MODULE_0__","_utils_helpers__WEBPACK_IMPORTED_MODULE_1__","fetch","headers","Authorization","getGitHubToken","response","json","githubUserProfileData","GET_USER_PROFILE_DATA","adminReposInOrg","currentLoggedInUserFirestoreReference","onSnapshot","doc","exists","data","orgs","org","key","GET_ORGS_DATA","reposArray","repos","repo","GET_REPOS_DATA","filter","admin","reposInOrgsArray","reposInOrgs","owner","name","GET_REPOS_IN_ORGS","subscriptionArray","subscriptions","subscription","GET_SUBSCRIPTIONS","fetchNotifications","notificationsArray","notifications","forEach","notification","notificationObject","title","body","createdBy","header","avatar","repositoryName","time","FETCH_NOTIFICATIONS","reverse","showNotification","showRepositories","showOrganizations","showProfile","showSubscriptions","SHOW_NOTIFICATIONS","SHOW_REPOSITORIES","SHOW_ORGANIZATION","SHOW_PROFILE","SHOW_SUBSCRIPTIONS","_AuthActions__WEBPACK_IMPORTED_MODULE_0__","_FetchUserDataActions__WEBPACK_IMPORTED_MODULE_1__","_SubscriptionActions__WEBPACK_IMPORTED_MODULE_2__","o","_NotificationsAction__WEBPACK_IMPORTED_MODULE_3__","_ToggelActions__WEBPACK_IMPORTED_MODULE_4__","initialState","isAuthenticated","showNotifications","showOrganization","showSubscription","combineReducers","state","arguments","length","undefined","Object","objectSpread","profile","action","toggel","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","styles","containerStyle","marginTop","textAlign","width","root","maxWidth","text","fontSize","color","underText","marginBottom","Main","signInAttempt","_this","props","this","classes","react_default","a","createElement","className","Typography_default","component","variant","gutterBottom","Button_default","onClick","size","React","Component","connect","withStyles","db","firestore","flexGrow","grow","ButtonContainer","navbarColor","backgroundColor","Navbar","signOutAttempt","toggelProfile","toggelRepositories","toggelOrganizations","toggelSubscriptions","toggelNotification","AppBar_default","position","Toolbar_default","Badge_default","margin","badgeContent","Mail_default","_","map","val","display","justifyContent","overflow","gridList","height","button","marginRight","headerText","RepoList","turnOffNotification","deleteWebhook","turnOnNotification","addWebhook","renderButton","active","_this2","GridList_default","cellHeight","GridListTile_default","cols","style","ListSubheader_default","id","src","avatarURL","alt","GridListTileBar_default","subtitle","actionIcon","flexWrap","backButton","viewReposInOrg","renderOrgs","deleteHook","reposURL","reposInOrgss","checkWhichAvatarToRender","avatarIMG","url","Button","delete","Notifications","clearNotifications","renderIfNotification","container","headline","Tooltip_default","IconButton_default","aria-label","Delete_default","List_default","ListItem_default","Avatar_default","ListItemText_default","primary","secondary","slice","SubscriptionList","githubStatsContainer","flex","underlineContainer","alignSelf","paddingRight","marginLeft","numberText","Profile","login","total_private_repos","public_repos","followers","Dashboard","toggelComponentToRender","components_Notifications_Notifications","components_RepoList_RepoList","OrgsList","components_SubscriptionList_SubscriptionList","components_Profile_Profile","allowNotifications","keys","i","k","reposObject","hooks_url","permissions","avatar_url","collection","getCurrentLoggedInGithubID","set","merge","_ref","asyncToGenerator","regenerator_default","mark","_callee","orgsObject","wrap","_context","prev","next","repos_url","orgName","reposInOrgObject","stop","_x","components_Navbar_Navbar","NotFound","App","es","Router","Switch","Route","exact","path","navigator","serviceWorker","register","registration","scope","err","ReactDOM","render","src_App","document","getElementById","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","history_createBrowserHistory__WEBPACK_IMPORTED_MODULE_0__","history_createBrowserHistory__WEBPACK_IMPORTED_MODULE_0___default","n","createHistory","_config_firebase__WEBPACK_IMPORTED_MODULE_0__","messaging","getItem","githubID","userID","requestPermission","getToken","token","msgToken","githubParameters","events","config","currentUser","content_type","method","JSON","stringify","Content-Type","update","obj","hooksID","deleteSubscription"],"mappings":"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","file":"static/js/main.1fe101af.chunk.js","sourcesContent":["import * as Firebase from 'firebase'\nimport { LOGGED_IN_SUCCES, SIGN_OUT } from './types'\nimport { setGitHubToken, saveGithubIDToFireStore } from '../utils/helpers'\nimport firebase from '../config/firebase'\nimport history from '../config/history'\n\n/* \nCheck if user is logged in, if a user exist display dashboard else loginpage\n*/\n\nexport const checkIfUserIsLoggedIn = () => dispatch => {\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      window.localStorage.setItem('loggedInUser', user.providerData[0].uid)\n      saveGithubIDToFireStore(user.providerData[0].uid)\n      dispatch({ type: LOGGED_IN_SUCCES, payload: true })\n      history.push('/dashboard')\n    } else {\n      dispatch({ type: SIGN_OUT, payload: false })\n    }\n  })\n}\n\n/* \nSign in a user with firebase Oauth\nOpens popup window, if success token will be retrived\n*/\n\nexport const signInUser = userData => dispatch => {\n  const provider = new Firebase.auth.GithubAuthProvider()\n\n  provider.addScope('user')\n  provider.addScope('repo')\n\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(function (result) {\n      const { accessToken } = result.credential\n      setGitHubToken(accessToken)\n      dispatch({ type: LOGGED_IN_SUCCES, payload: true })\n      history.push('/dashboard')\n    })\n    .catch(function (error) {\n      const { errorCode, errorMessage } = error\n      console.log(\n        `Something went wrong please check your credentials or try again. error message : ${errorMessage} - ${errorCode}`\n      )\n    })\n}\n\n/* \nSign out user and display loginpage\n*/\n\nexport const signOutUser = userData => dispatch => {\n  firebase\n    .auth()\n    .signOut()\n    .then(() => {\n      dispatch({ type: SIGN_OUT, payload: false })\n      history.push('/')\n    })\n    .catch(function (error) {\n      console.log(`error accurred${error}`)\n    })\n}\n","import { GET_USER_PROFILE_DATA, GET_REPOS_DATA, GET_ORGS_DATA, GET_REPOS_IN_ORGS, GET_SUBSCRIPTIONS } from './types'\nimport { getGitHubToken, currentLoggedInUserFirestoreReference } from '../utils/helpers'\n\n/* \nRetrieve github repositories from authenticated user and saves it as objects to firestore under field \"repos\"\n*/\n\nexport const fetchUserDataFromGithubAPI = () => {\n  return (dispatch) => {\n    window\n      .fetch('https://api.github.com/user', {\n        headers: { Authorization: 'token ' + getGitHubToken() }\n      })\n      .then((response) => response.json())\n      .then((githubUserProfileData) => {\n        dispatch({ type: GET_USER_PROFILE_DATA, payload: githubUserProfileData })\n      })\n  }\n}\n\n/* \n  Fetches all organizations in realtime from authenticated users firestore & update the state with the new data\n*/\n\nexport const fetchOrgsDataGithubAPI = () => {\n  let adminReposInOrg = []\n\n  return (dispatch) => {\n    currentLoggedInUserFirestoreReference().onSnapshot(function (doc) {\n      if (doc.exists && doc.data().orgs) {\n        let org = doc.data().orgs\n        for (let key in org) {\n          adminReposInOrg.push(org[key])\n        }\n      }\n\n      dispatch({ type: GET_ORGS_DATA, payload: adminReposInOrg })\n      adminReposInOrg = []\n    })\n  }\n}\n\n/* \n  Fetches all repositories in realtime from authenticated users firestore & update the state with the new data\n*/\n\nexport const fetchReposDataGithubAPI = () => {\n  let reposArray = []\n\n  return (dispatch) => {\n    currentLoggedInUserFirestoreReference().onSnapshot(function (doc) {\n      if (doc.exists && doc.data().repos) {\n\n        let repo = doc.data().repos\n\n        for (let key in repo) {\n          reposArray.push(repo[key])\n        }\n      }\n\n      dispatch({ type: GET_REPOS_DATA, payload: reposArray.filter(repo => repo.admin === true) })\n      reposArray = []\n    })\n  }\n}\n\n/* \n  Fetches all repositories in organizations in realtime from the authenticated users firestore & update the state with the new data\n*/\n\nexport const fetchReposInOrg = (org) => {\n  let reposInOrgsArray = []\n\n  return (dispatch) => {\n    currentLoggedInUserFirestoreReference().onSnapshot(function (doc) {\n      if (doc.exists && doc.data().reposInOrgs) {\n        let repo = doc.data().reposInOrgs\n        for (let key in repo) {\n          if (repo[key].owner === org.name) {\n            reposInOrgsArray.push(repo[key])\n          }\n        }\n      }\n\n      dispatch({ type: GET_REPOS_IN_ORGS, payload: reposInOrgsArray })\n      reposInOrgsArray = []\n    })\n  }\n}\n\n/* \n  Fetches all subscription in realtime from authenticated users firestore & update the state with the new data\n*/\n\nexport const fetchSubscriptions = () => {\n  let subscriptionArray = []\n\n  return (dispatch) => {\n    currentLoggedInUserFirestoreReference().onSnapshot(function (doc) {\n      if (doc.exists && doc.data().subscriptions) {\n        let subscription = doc.data().subscriptions\n        for (let key in subscription) {\n          subscriptionArray.push(subscription[key])\n        }\n      }\n\n      dispatch({ type: GET_SUBSCRIPTIONS, payload: subscriptionArray })\n      subscriptionArray = []\n    })\n  }\n}\n\n","import { FETCH_NOTIFICATIONS } from './types'\nimport { currentLoggedInUserFirestoreReference } from '../utils/helpers'\n\n/* \n  Fetches all notifications in realtime from authenticated users firestore & update the state with the new data\n*/\n\nexport const fetchNotifications = () => {\n  var notificationsArray = []\n  return (dispatch) => {\n\n    currentLoggedInUserFirestoreReference().onSnapshot(function (doc) {\n      if (doc.exists && doc.data().notifications) {\n        let notifications = doc.data().notifications\n        notifications.forEach(notification => {\n          let notificationObject = {}\n          notificationObject.title = notification.notification.title\n          notificationObject.body = notification.notification.body\n          notificationObject.createdBy = notification.notification.header\n          notificationObject.avatar = notification.notification.avatar\n          notificationObject.repositoryName = notification.notification.repositoryName\n          notificationObject.time = notification.notification.time\n\n\n          notificationsArray.push(notificationObject)\n        })\n        dispatch({ type: FETCH_NOTIFICATIONS, payload: notificationsArray.reverse() })\n        notificationsArray = []\n      }\n    })\n  }\n}\n\n\n// export const deleteUserNotices = () => {\n//   let user = firebase.auth().currentUser\n//   let dbData = firebase.firestore().collection('notices').where('firebaseId', '==', user.uid)\n//   dbData.get().then(querySnapshot => {\n//     querySnapshot.forEach(doc => {\n//       doc.ref.delete()\n//     })\n//   }\n\n//   )\n// }","import { SHOW_NOTIFICATIONS, SHOW_REPOSITORIES, SHOW_ORGANIZATION, SHOW_PROFILE, SHOW_SUBSCRIPTIONS } from './types'\n\nexport const showNotification = () => {\n  return (dispatch) => {\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: true })\n  }\n}\n\nexport const showRepositories = () => {\n  return (dispatch) => {\n    dispatch({ type: SHOW_REPOSITORIES, payload: true })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n  }\n}\n\nexport const showOrganizations = () => {\n  return (dispatch) => {\n    dispatch({ type: SHOW_REPOSITORIES, payload: false })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n    dispatch({ type: SHOW_ORGANIZATION, payload: true })\n  }\n}\n\nexport const showProfile = () => {\n  return (dispatch) => {\n    dispatch({ type: SHOW_PROFILE, payload: true })\n    dispatch({ type: SHOW_REPOSITORIES, payload: false })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n    dispatch({ type: SHOW_ORGANIZATION, payload: false })\n    dispatch({ type: SHOW_SUBSCRIPTIONS, payload: false })\n  }\n}\n\nexport const showSubscriptions = () => {\n  return (dispatch) => {\n    dispatch({ type: SHOW_SUBSCRIPTIONS, payload: true })\n    dispatch({ type: SHOW_PROFILE, payload: false })\n    dispatch({ type: SHOW_REPOSITORIES, payload: false })\n    dispatch({ type: SHOW_NOTIFICATIONS, payload: false })\n    dispatch({ type: SHOW_ORGANIZATION, payload: false })\n  }\n}\n\n","/*\nAction Creators\n*/\n\nexport * from './AuthActions'\nexport * from './FetchUserDataActions'\nexport * from './SubscriptionActions'\nexport * from './NotificationsAction'\nexport * from './ToggelActions'\n","import { LOGGED_IN_SUCCES, SIGN_OUT } from '../actions/types'\n\nconst initialState = {\n  isAuthenticated: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOGGED_IN_SUCCES:\n      return {\n        ...state,\n        isAuthenticated: true\n      }\n\n    case SIGN_OUT:\n      return {\n        ...state,\n        isAuthenticated: false\n      }\n\n    default:\n      return state\n  }\n}\n","import { GET_USER_PROFILE_DATA } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_USER_PROFILE_DATA:\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","import { GET_REPOS_DATA } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_REPOS_DATA:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import { GET_ORGS_DATA, GET_REPOS_IN_ORGS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ORGS_DATA:\n      return action.payload\n\n    case GET_REPOS_IN_ORGS:\n      console.log(action.payload)\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","import { FETCH_NOTIFICATIONS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_NOTIFICATIONS:\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","import { SHOW_NOTIFICATIONS, SHOW_REPOSITORIES, SHOW_ORGANIZATION, SHOW_PROFILE, SHOW_SUBSCRIPTIONS } from '../actions/types'\n\nconst initialState = {\n  showNotifications: false,\n  showRepositories: false,\n  showOrganization: false,\n  showSubscription: false,\n  showProfile: true\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SHOW_NOTIFICATIONS:\n      return {\n        ...state,\n        showNotifications: action.payload\n      }\n\n    case SHOW_REPOSITORIES:\n      return {\n        ...state,\n        showRepositories: action.payload\n      }\n\n    case SHOW_ORGANIZATION:\n      return {\n        ...state,\n        showOrganization: action.payload\n      }\n\n    case SHOW_PROFILE:\n      return {\n        ...state,\n        showProfile: action.payload\n      }\n\n      case SHOW_SUBSCRIPTIONS:\n      return {\n        ...state,\n        showSubscription: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n","import { GET_SUBSCRIPTIONS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_SUBSCRIPTIONS:\n            return action.payload\n\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport authReducer from './AuthReducer'\nimport profileReducer from './ProfileReducer'\nimport reposReducer from './ReposReducer'\nimport orgsReducer from './OrgsReducer'\nimport notificationsReducer from './NotificationsReducer'\nimport toggelReducers from './ToggelReducer'\nimport subscriptionReducers from './SubscriptionReducer'\n\nexport default combineReducers({\n  auth: authReducer,\n  profile: profileReducer,\n  repos: reposReducer,\n  orgs: orgsReducer,\n  notification: notificationsReducer,\n  toggel: toggelReducers,\n  subscription: subscriptionReducers\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers/index'\nconst middleware = [ thunk ]\nconst initialState = {}\n\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)))\n\nexport default store\n","const styles = {\n  containerStyle: {\n    marginTop: '20%',\n    textAlign: 'center',\n    width: '100%'\n  },\n  root: {\n    width: '100%',\n    maxWidth: 500\n  },\n  text: {\n    fontSize: 100,\n    color: 'black',\n    textAlign: 'center'\n  },\n  underText: {\n    marginBottom: '2%'\n  }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { signInUser, checkIfUserIsLoggedIn } from '../actions';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './Main.style';\n\nclass Main extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.checkIfUserIsLoggedIn()\n\t}\n\n\tsignInAttempt = () => {\n\t\tthis.props.signInUser()\n\t}\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.containerStyle}>\n\t\t\t\t<Typography component=\"h2\" variant=\"h2\" gutterBottom>\n\t\t\t\t\tWelcome To Guthub Dashboard\n\t\t\t\t</Typography>\n\t\t\t\t<Typography className={classes.underText} component=\"h2\" variant=\"overline\" gutterBottom>\n\t\t\t\tnever miss a commit or issue again  \n\n\t\t\t</Typography>\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={this.signInAttempt} color=\"primary\" size=\"large\" variant=\"outlined\">\n\t\t\t\t\t\tLog in{' '}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nMain.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default connect(null, { signInUser, checkIfUserIsLoggedIn })(withStyles(styles)(Main));\n","import { getGitHubToken, getCurrentLoggedInGithubID } from './helpers'\nimport firebase from '../config/firebase'\nlet db = firebase.firestore()\n\n/* \nRetrieve github repositories from authenticated user and saves it as objects to firestore under field \"repos\"\n*/\n\nexport const saveReposToFireStore = () => {\n    window\n        .fetch('https://api.github.com/user/repos', {\n            headers: { Authorization: 'token ' + getGitHubToken() }\n        })\n        .then((response) => response.json())\n        .then(repo => {\n            let keys = Object.keys(repo)\n\n            for (var i = 0; i < keys.length; i++) {\n                let k = keys[i]\n                let repos = {}\n\n                var reposObject = {\n                    'id': repo[k].id,\n                    'name': repo[k].name,\n                    'hooks_url': repo[k].hooks_url,\n                    'url': repo[k].url,\n                    'owner': repo[k].owner.login,\n                    'admin': repo[k].permissions.admin,\n                    'avatarURL': repo[k].owner.avatar_url\n                }\n\n                repos[`${reposObject.id}`] = reposObject\n\n                db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).set({ repos: repos }, { merge: true })\n            }\n        })\n}\n\n/* \nRetrieve github repositories from authenticated user and saves it as objects to firestore under field \"reposInOrgs\"\n*/\n\n\nexport const saveReposInOrgsToFireStore = (orgName) => {\n    window\n        .fetch(`https://api.github.com/orgs/${orgName}/repos`, {\n            headers: { Authorization: 'token ' + getGitHubToken() }\n        })\n        .then((response) => response.json())\n        .then(repo => {\n            let keys = Object.keys(repo)\n\n            for (var i = 0; i < keys.length; i++) {\n                let k = keys[i]\n\n                let reposInOrgs = {}\n\n                let reposInOrgObject = {\n                    'id': repo[k].id,\n                    'name': repo[k].name,\n                    'hooks_url': repo[k].hooks_url,\n                    'url': repo[k].url,\n                    'owner': repo[k].owner.login,\n                    'admin': repo[k].permissions.admin,\n                    'avatarURL': repo[k].owner.avatar_url,\n                    'reposInOrgss': true\n                }\n\n                reposInOrgs[`${reposInOrgObject.id}`] = reposInOrgObject\n\n                db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).set({ reposInOrgs: reposInOrgs }, { merge: true })\n            }\n        })\n}\n\n\n/* \nRetrieve github organizations from authenticated user and saves it as objects to firestore under field \"orgs\"\n*/\n\nexport const saveOrgsToFireStore = () => {\n    window\n        .fetch(`https://api.github.com/user/orgs`, {\n            headers: { Authorization: 'token ' + getGitHubToken() }\n        })\n        .then((response) => response.json())\n        .then(async (data) => {\n            let keys = Object.keys(data)\n\n            for (var i = 0; i < keys.length; i++) {\n                let k = keys[i]\n                let orgs = {}\n\n                let orgsObject = {\n                    'id': data[k].id,\n                    'name': data[k].login,\n                    'hooks_url': data[k].hooks_url,\n                    'url': data[k].url,\n                    'avatarURL': data[k].avatar_url,\n                    'reposURL': data[k].repos_url\n                }\n\n                saveReposInOrgsToFireStore(data[k].login)\n\n                orgs[`${orgsObject.id}`] = orgsObject\n\n                db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).set({ orgs: orgs }, { merge: true })\n            }\n        })\n}\n","const styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n\n  },\n\n  ButtonContainer: {\n    textAlign: 'right',\n    flexGrow: 1\n\n  },\n  navbarColor: {\n    backgroundColor: '#76427A'\n  }\n}\n\nexport default styles\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { signOutUser, showRepositories, showNotification, showOrganizations, showProfile,showSubscriptions } from '../../actions';\nimport _ from 'lodash';\n\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './Navbar.style';\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\n\nclass Navbar extends Component {\n\n\tsignOutAttempt = () => {\n\t\tthis.props.signOutUser();\n\t};\n\n\ttoggelProfile = () => {\n\t\tthis.props.showProfile()\n\t}\n\n\ttoggelRepositories = () => {\n\t\tthis.props.showRepositories();\n\t};\n\n\ttoggelOrganizations = () => {\n\t\tthis.props.showOrganizations();\n\t};\n\n\ttoggelSubscriptions = () => {\n\t\tthis.props.showSubscriptions();\n\t};\n\n\ttoggelNotification = ()=>{\n\t\tthis.props.showNotification()\n\t}\n\t\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<AppBar color=\"primary\" className={classes.navbarColor} position=\"static\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Typography className={classes.grow} variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\tGithub Dashboard\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className={classes.ButtonContainer}>\n\t\t\t\t\t\t\t<Button onClick={this.toggelProfile} color=\"inherit\">\n\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.toggelOrganizations} color=\"inherit\">\n\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\tOrganizations\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.toggelRepositories} color=\"inherit\">\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\tRepositories\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t<Button onClick={this.toggelSubscriptions} color=\"inherit\">\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\tMy Subscriptions\n\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.toggelNotification} color=\"inherit\">\n\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\tclassName={classes.margin}\n\t\t\t\t\t\t\t\t\tonClick={this.toggelNotification}\n\t\t\t\t\t\t\t\t\tbadgeContent={this.props.notifications.length}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MailIcon />\n\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.signOutAttempt} color=\"inherit\">\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\tSign out\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nNavbar.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst notifications = _.map(state.notification, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { notifications };\n};\n\nexport default connect(mapStateToProps, {\n\tsignOutUser,\n\tshowRepositories,\n\tshowNotification,\n\tshowOrganizations,\n\tshowSubscriptions,\n\tshowProfile\n})(withStyles(styles)(Navbar));\n","const styles = {\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  gridList: {\n    width: 800,\n    height: 750\n  },\n  button: {\n    backgroundColor: '#FFF',\n    marginRight: 20\n  },\n  headerText: {\n    textAlign: 'center',\n    marginTop: '10%'\n\n  },\n  text: {\n    textAlign: 'center',\n    marginTop: 300\n\n  }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addWebhook, deleteWebhook } from '../../utils/helpers'\nimport _ from 'lodash';\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListHeader from '@material-ui/core/ListSubheader';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// Styles\nimport styles from './RepoList.Style';\n\nclass RepoList extends React.Component {\n\n\tturnOffNotification = (repo) => {\n\t\tdeleteWebhook(repo)\n\t};\n\n\tturnOnNotification = (repo) => {\n\t\taddWebhook(repo);\n\t};\n\n\trenderButton = (repos, classes) => {\n\t\tif (repos.active) {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.turnOffNotification(repos)}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\tUnsubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.turnOnNotification(repos)}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\tSubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<GridList cellHeight={180} className={classes.gridList}>\n\t\t\t\t\t<GridListTile key=\"header\" cols={2} style={{ height: 'auto' }}>\n\t\t\t\t\t\t<ListHeader className={classes.headerText} component=\"div\">\n\t\t\t\t\t\t\t<Typography variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\t\tGithub Repositories\n\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</ListHeader>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t\t{this.props.repos.map((repos) => (\n\t\t\t\t\t\t<GridListTile key={repos.id}>\n\t\t\t\t\t\t\t<img src={repos.avatarURL} alt={repos.name} />\n\t\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\t\ttitle={repos.name}\n\t\t\t\t\t\t\t\tsubtitle={<span>owner: {repos.owner}</span>}\n\t\t\t\t\t\t\t\tactionIcon={this.renderButton(repos, classes)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GridListTile>\n\t\t\t\t\t))}\n\t\t\t\t</GridList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRepoList.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst repos = _.map(state.repos, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { repos };\n};\n\nexport default connect(mapStateToProps, {})(withStyles(styles)(RepoList));\n\n\n\n","const styles = {\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  gridList: {\n    width: 800,\n    height: 750\n  },\n  button: {\n    backgroundColor: '#FFF',\n    marginRight: 20\n  },\n  backButton: {\n    backgroundColor: '#A5668B',\n    marginRight: 20\n  },\n  headerText: {\n    textAlign: 'center',\n    marginTop: '10%',\n    marginBottom: '10%'\n\n\n  }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchOrgsDataGithubAPI, fetchReposInOrg } from '../../actions';\nimport { addWebhook, deleteWebhook } from '../../utils/helpers'\nimport _ from 'lodash';\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListHeader from '@material-ui/core/ListSubheader';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// Styles\nimport styles from './OrgsList.style';\n\nclass RepoList extends React.Component {\n\n\tviewReposInOrg = (org) => {\n\t\tthis.props.fetchReposInOrg(org);\n\t};\n\n\trenderOrgs = () => {\n\t\tthis.props.fetchOrgsDataGithubAPI();\n\t};\n\n\taddWebhook = (org) => {\n\t\taddWebhook(org);\n\t};\n\n\tdeleteHook = (org) => {\n\t\tdeleteWebhook(org)\n\t}\n\n\n\trenderButton = (orgs, classes) => {\n\t\tif (orgs.reposURL) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={() => this.viewReposInOrg(orgs)} variant=\"contained\" className={classes.button}>\n\t\t\t\t\t\tView\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (orgs.reposURL && !orgs.admin  || orgs.reposInOrgss && !orgs.admin) {\n\t\t\treturn (\n\t\t\t\t<Button variant=\"contained\" className={classes.button}>\n\t\t\t\t\tNot admin\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else if (orgs.active) {\n\t\t\treturn (\n\t\t\t\t<Button onClick={() => this.deleteHook(orgs)} variant=\"contained\" className={classes.button}>\n\t\t\t\t\tUnsubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button onClick={() => this.addWebhook(orgs)} variant=\"contained\" className={classes.button}>\n\t\t\t\t\tSubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\n\t};\n\n\tcheckWhichAvatarToRender = (orgs) => {\n\t\tif (orgs.avatarIMG) {\n\t\t\treturn orgs.avatarIMG;\n\t\t} else {\n\t\t\treturn orgs.avatarURL;\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<GridList cellHeight={180} className={classes.gridList}>\n\t\t\t\t\t<GridListTile key=\"header\" cols={2} style={{ height: 'auto' }}>\n\t\t\t\t\t\t<ListHeader component=\"div\">\n\t\t\t\t\t\t\t<Typography className={classes.headerText} variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\t\tGithub Organizations\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</ListHeader>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t\t{this.props.orgs.map((orgs) => (\n\t\t\t\t\t\t<GridListTile key={orgs.name}>\n\t\t\t\t\t\t\t<img src={this.checkWhichAvatarToRender(orgs)} alt={'avatar'} />\n\t\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\t\ttitle={orgs.name}\n\t\t\t\t\t\t\t\tkey={orgs.name}\n\t\t\t\t\t\t\t\tsubtitle={<span> {orgs.url}</span>}\n\t\t\t\t\t\t\t\tactionIcon={this.renderButton(orgs, classes)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GridListTile>\n\t\t\t\t\t))}\n\t\t\t\t\t<Button onClick={() => this.renderOrgs()} variant=\"contained\" className={classes.backButton}>\n\t\t\t\t\t\tBack\n\t\t\t\t\t</Button>\n\t\t\t\t</GridList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRepoList.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst orgs = _.map(state.orgs, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { orgs };\n};\n\nexport default connect(mapStateToProps, {\n\tfetchOrgsDataGithubAPI,\n\tfetchReposInOrg\n})(withStyles(styles)(RepoList));\n","const styles = {\n    root: {\n        maxWidth: 860,\n        marginTop: '3%',\n        margin: 'auto',\n        width: '80‰',\n        textAlign: 'center',\n      \n    },\n    Button: {\n        marginTop: 10,\n        marginRight: 110\n    },\n    delete: {\n        textAlign: 'right'\n    }\n}\n\nexport default styles\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { } from '../../actions';\nimport { currentLoggedInUserFirestoreReference, getCurrentLoggedInGithubID } from '../../utils/helpers'\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport styles from './Notifications.style';\n\nclass Notifications extends React.Component {\n\n\n\tclearNotifications = () => {\n\t\tconsole.log('clear noti')\n\t}\n\n\trenderIfNotification = (notifications, classes) => {\n\t\tif (notifications.length === 0) {\n\t\t\treturn (\n\t\t\t\t<Typography variant=\"overline\" gutterBottom>\n\t\t\t\t\tNo new notifications\n\t\t\t\t</Typography>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div key={notifications}>\n\n\t\t\t\t\t<div className={classes.container}>\n\t\t\t\t\t\t<Typography className={classes.headline} variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\tNotifications\n\t\t\t\t\t\t<div className={classes.delete} >\n\t\t\t\t\t\t\t\t<Tooltip title=\"Delete\">\n\t\t\t\t\t\t\t\t\t<IconButton onClick={this.clearNotifications} aria-label=\"Delete\">\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{notifications.map((notification) => (\n\t\t\t\t\t\t<List key={notification.time}>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<Avatar alt=\"\" src={notification.avatar} ></Avatar>\n\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={notification.title}\n\t\t\t\t\t\t\t\t\tsecondary={notification.body}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\t\t\t{notification.createdBy} issue on {notification.repositoryName}\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem>\n\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary=''\n\t\t\t\t\t\t\t\t\tsecondary=''\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\t\t\t{notification.time.slice(0, 24)}\n\t\t\t\t\t\t\t\t</Typography>\n\n\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t</List>\n\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconsole.log(this.props.notifications)\n\n\t\treturn <div className={classes.root}>{this.renderIfNotification(this.props.notifications, classes)}</div>;\n\t}\n}\n\nNotifications.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst notifications = _.map(state.notification, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { notifications };\n};\n\nexport default connect(mapStateToProps, {})(withStyles(styles)(Notifications));\n","const styles = {\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        overflow: 'hidden'\n    },\n    gridList: {\n        width: 800,\n        height: 750\n    },\n    button: {\n        backgroundColor: '#FFF',\n        marginRight: 20\n    },\n    headerText: {\n        textAlign: 'center',\n        marginTop: '10%'\n    },\n    text: {\n        textAlign: 'center',\n        marginTop: 300\n\n    }\n}\n\nexport default styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {  addWebhook, deleteWebhook } from '../../utils/helpers'\nimport _ from 'lodash';\n\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListHeader from '@material-ui/core/ListSubheader';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// Styles\nimport styles from './SubscriptionList.style';\n\nclass SubscriptionList extends React.Component {\n\n\tturnOffNotification = (subscription) => {\n\t\tconsole.log('delete')\n\t\tdeleteWebhook(subscription)\n\t};\n\n\tturnOnNotification = (subscription) => {\n\t\taddWebhook(subscription);\n\t};\n\n\trenderButton = (subscription, classes) => {\n\t\tif (subscription.active) {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.turnOffNotification(subscription)}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\tUnsubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.turnOnNotification(subscription)}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\tSubscribe\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<GridList cellHeight={180} className={classes.gridList}>\n\t\t\t\t\t<GridListTile key=\"header\" cols={2} style={{ height: 'auto' }}>\n\t\t\t\t\t\t<ListHeader className={classes.headerText} component=\"div\">\n\t\t\t\t\t\t\t<Typography variant=\"overline\" gutterBottom>\n\t\t\t\t\t\t\t\tMy Subscriptions\n\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</ListHeader>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t\t{this.props.subscription.map((subscription) => (\n\t\t\t\t\t\t<GridListTile key={subscription.id}>\n\t\t\t\t\t\t\t<img src={subscription.avatarURL} alt={subscription.name} />\n\t\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\t\ttitle={subscription.name}\n\t\t\t\t\t\t\t\tsubtitle={<span>owner: {subscription.owner}</span>}\n\t\t\t\t\t\t\t\tactionIcon={this.renderButton(subscription, classes)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GridListTile>\n\t\t\t\t\t))}\n\t\t\t\t</GridList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSubscriptionList.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n\tconst subscription = _.map(state.subscription, (val) => {\n\t\treturn { ...val };\n\t});\n\n\treturn { subscription };\n};\n\nexport default connect(mapStateToProps, {\n})(withStyles(styles)(SubscriptionList));\n\n\n\n","const styles = {\n    root: {\n        display: ' flex',\n        height: '100%',\n\n    },\n    githubStatsContainer: {\n        flex: 1,\n        marginTop: '8%'\n    },\n    headerText: {\n        textAlign: 'center'\n    },\n    underlineContainer: {\n        display: 'inline-flex',\n        marginTop: '4%',\n        textAlign: 'center'\n    },\n    text: {\n        alignSelf: 'center',\n        paddingRight: 20,\n        marginLeft: '1%',\n        width: 200,\n        textAlign: 'center'\n\n    },\n    numberText: {\n        textAlign: 'center'\n    }\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n// Material-UI components\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport styles from './Profile.style'\n\nclass Profile extends React.Component {\n  render() {\n    const { classes } = this.props\n    return (\n\n      <div className={classes.root}>\n\n        <div className={classes.githubStatsContainer}>\n\n          <div className={classes.headerText} >\n            <Typography variant='overline' color='inherit'>\n              Github Overview\n            </Typography>\n\n\n            <Typography variant='overline' color='inherit'>\n              Logged in user : {this.props.profile.login}\n            </Typography>\n\n            <div className={classes.underlineContainer}>\n              <Typography className={classes.text} variant='overline' color='inherit'>\n                Private Repos\n                <hr />\n                <Typography className={classes.numberText} variant='overline' color='inherit'>\n                  {this.props.profile.total_private_repos}\n                </Typography>\n              </Typography>\n\n              <Typography className={classes.text} variant='overline' color='inherit'>\n                Public Repos\n                 <hr />\n\n                <Typography className={classes.numberText} variant='overline' color='inherit'>\n                  {this.props.profile.public_repos}\n                </Typography>\n\n              </Typography>\n              <Typography className={classes.text} variant='overline' color='inherit'>\n                Followers\n                <hr />\n                <Typography className={classes.numberText} variant='overline' color='inherit'>\n                  {this.props.profile.followers}\n                </Typography>\n              </Typography>\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n    )\n  }\n}\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\nexport default connect(mapStateToProps, {})(withStyles(styles)(Profile))\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { allowNotifications } from '../../utils/helpers';\nimport { saveReposToFireStore, saveOrgsToFireStore } from '../../utils/firebaseHelpers';\n\n// Components\nimport Navbar from '../Navbar/Navbar';\nimport RepoList from '../RepoList/RepoList';\nimport OrgsList from '../OrgsList/OrgsList';\nimport Notifcations from '../Notifications/Notifications';\nimport SubscriptionList from '../SubscriptionList/SubscriptionList'\nimport Profile from '../Profile/Profile'\n\nimport {\n\tfetchReposDataGithubAPI,\n\tfetchUserDataFromGithubAPI,\n\tfetchOrgsDataGithubAPI,\n\tfetchNotifications,\n\tfetchSubscriptions\n} from '../../actions';\n\nclass Dashboard extends Component {\n\tcomponentWillMount(){\n\t\tallowNotifications();\n\t\tsaveReposToFireStore()\n\t\tsaveOrgsToFireStore()\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.props.fetchUserDataFromGithubAPI();\n\t\tthis.props.fetchReposDataGithubAPI()\n\t\tthis.props.fetchOrgsDataGithubAPI()\n\t\tthis.props.fetchNotifications()\n\t\tthis.props.fetchSubscriptions()\n\t}\n\n\ttoggelComponentToRender = () => {\n\t\tif (this.props.toggel.showNotifications) {\n\t\t\treturn <Notifcations />;\n\t\t} else if (this.props.toggel.showRepositories) {\n\t\t\treturn <RepoList />;\n\t\t} else if (this.props.toggel.showOrganization) {\n\t\t\treturn <OrgsList />;\n\t\t} else if (this.props.toggel.showSubscription) {\n\t\t\treturn <SubscriptionList />\n\t\t}\n\t\telse {\n\t\t\treturn <Profile />\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t{this.toggelComponentToRender()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn state;\n};\n\nexport default connect(mapStateToProps, {\n\tfetchUserDataFromGithubAPI,\n\tfetchReposDataGithubAPI,\n\tfetchOrgsDataGithubAPI,\n\tfetchNotifications,\n\tfetchSubscriptions\n})(Dashboard);\n","import React, { Component } from 'react'\n\nclass NotFound extends Component {\n  render () {\n    return (\n      <div>\n        <p>Page Not Found </p>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport history from './config/history'\nimport { Provider } from 'react-redux'\nimport store from './config/store'\nimport Main from './components/Main'\nimport Dashboard from './components/Dashboard/Dashboard'\nimport NotFound from './components/NotFound/NotFound'\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <div>\n            <Switch>\n              <Route exact path='/' component={Main} />\n              <Route exact path='/dashboard' component={Dashboard} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker\n    .register('../firebase-messaging-sw.js')\n    .then(function (registration) {\n      console.log('Registration successful, scope is:', registration.scope)\n    })\n    .catch(function (err) {\n      console.log('Service worker registration failed, error:', err)\n    })\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import * as firebase from 'firebase'\n\nconst config = {\n  apiKey: 'AIzaSyBr2zjlkIdRl2TwTN2OOsA85AW8NeHBI2k',\n  authDomain: 'guthubdashboard.firebaseapp.com',\n  databaseURL: 'https://guthubdashboard.firebaseio.com',\n  projectId: 'guthubdashboard',\n  storageBucket: 'guthubdashboard.appspot.com',\n  messagingSenderId: '259327836521'\n}\n\nexport default firebase.initializeApp(config)\n","// Auth\nexport const LOGGED_IN_SUCCES = 'LOGGED_IN_SUCCESS'\nexport const SIGN_OUT = 'SIGN_OUT'\n\n// Profile\nexport const GET_USER_PROFILE_DATA = 'GET_USER_PROFILE_DATA'\n\n// Repos - Orgs\nexport const GET_REPOS_DATA = 'GET_REPOS_DATA'\nexport const GET_ORGS_DATA = 'GET_ORGS_DATA'\nexport const GET_REPOS_IN_ORGS = 'GET_REPOS_IN_ORGS'\nexport const GET_SUBSCRIPTIONS = 'GET_SUBSCRIPTIONS'\n\n// Webhook\nexport const ADD_WEBHOOK = 'ADD_WEBHOOK'\nexport const DELETE_WEBHOOK = 'DELETE_WEBHOOK'\n\n// Notifications\nexport const FETCH_NOTIFICATIONS = 'FETCH_NOTIFICATIONS'\nexport const DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS'\n\n// Toggel\nexport const SHOW_NOTIFICATIONS = 'SHOW_NOTIFICATIONS'\nexport const SHOW_REPOSITORIES = 'SHOW_REPOSITORIES'\nexport const SHOW_ORGANIZATION = 'SHOW_ORGANIZATION'\nexport const SHOW_PROFILE = 'SHOW_PROFILE'\nexport const SHOW_SUBSCRIPTIONS = 'SHOW_SUBSCRIPTIONS'\n","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory()\n","import firebase from '../config/firebase'\nlet db = firebase.firestore()\nlet messaging = firebase.messaging()\n\nexport const getCurrentLoggedInUserID = () => {\n  let user = firebase.auth().currentUser\n  return user.uid\n}\n\nexport const getCurrentLoggedInGithubID = () => {\n  let id = window.localStorage.getItem('loggedInUser')\n  return id\n}\n\nexport const saveGithubIDToFireStore = (githubID) => {\n  db.collection('users').doc(`${githubID}`).set({\n    userID: githubID\n  }, { merge: true })\n}\n\nexport const currentLoggedInUserFirestoreReference = () => {\n\n  return db.collection('users').doc(`${getCurrentLoggedInGithubID()}`)\n}\nexport const allowNotifications = () => {\n  messaging\n    .requestPermission()\n    .then(() => {\n      return messaging.getToken()\n    })\n    .then((token) => {\n      currentLoggedInUserFirestoreReference().set({ msgToken: token }, { merge: true })\n    })\n    .catch((err) => {\n      console.log('An error accured : ' + err)\n    })\n}\n\nexport const setGitHubToken = (accessToken) => {\n  window.localStorage.setItem('token', accessToken)\n}\n\nexport const getGitHubToken = () => {\n  const accessToken = window.localStorage.getItem('token')\n  return accessToken\n}\n\nexport const getConfigURL = () => {\n  let config = {\n    url: `https://us-central1-guthubdashboard.cloudfunctions.net/events?id=${getCurrentLoggedInUserID()}`,\n    content_type: 'json'\n  }\n  return config\n}\n\nexport const addWebhook = (repo) => {\n  let githubParameters = { events: ['issues', 'push'], name: 'web', config: getConfigURL() }\n\n  window\n    .fetch(repo.hooks_url, {\n      method: 'POST',\n      body: JSON.stringify(githubParameters),\n      headers: {\n        Authorization: 'token ' + getGitHubToken(),\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((response) => response.json())\n    .then((data) => {\n      if (repo.reposInOrgss === true) {\n        let update = {}\n        let subscriptions = {}\n        let obj = {\n          active: true,\n          admin: repo.admin,\n          avatarURL: repo.avatarURL,\n          hooks_url: repo.hooks_url,\n          id: repo.id,\n          name: repo.name,\n          owner: repo.owner,\n          url: repo.url,\n          hooksID: data.url,\n          reposInOrgss: true\n        }\n\n        update[`reposInOrgs.${repo.id}`] = obj\n        subscriptions[`subscriptions.${repo.id}`] = obj\n\n        db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).update(update)\n        db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).update(subscriptions)\n\n      } else {\n        let update = {}\n        let subscriptions = {}\n\n        let obj = {\n          active: true,\n          admin: repo.admin,\n          avatarURL: repo.avatarURL,\n          hooks_url: repo.hooks_url,\n          id: repo.id,\n          name: repo.name,\n          owner: repo.owner,\n          url: repo.url,\n          hooksID: data.url\n        }\n        update[`repos.${repo.id}`] = obj\n        subscriptions[`subscriptions.${repo.id}`] = obj\n\n        db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).update(update)\n        db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).update(subscriptions)\n\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n}\n\nexport const deleteWebhook = (repo) => {\n  console.log(repo)\n  window\n    .fetch(repo.hooksID, {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'token ' + getGitHubToken(),\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(() => {\n      if (repo.reposInOrgss === true) {\n        let update = {}\n        let reposInOrgs = {\n          active: false,\n          admin: repo.admin,\n          avatarURL: repo.avatarURL,\n          hooks_url: repo.hooks_url,\n          id: repo.id,\n          name: repo.name,\n          owner: repo.owner,\n          url: repo.url,\n          hooksID: repo.url,\n          reposInOrgss: true\n        }\n\n        update[`reposInOrgs.${repo.id}`] = reposInOrgs\n\n        deleteSubscription(repo.id)\n\n        db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).update(update)\n\n      } else {\n        let obj = {\n          active: false,\n          admin: repo.admin,\n          avatarURL: repo.avatarURL,\n          hooks_url: repo.hooks_url,\n          id: repo.id,\n          name: repo.name,\n          owner: repo.owner,\n          url: repo.url,\n          hooksID: repo.hooksID\n        }\n\n        let update = {}\n\n        update[`repos.${repo.id}`] = obj\n\n        deleteSubscription(repo.id)\n\n        db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).update(update)\n      }\n    })\n}\n\nexport const deleteSubscription = (id) => {\n\n  //   db.collection('users').doc(`${getCurrentLoggedInGithubID()}`).update({\n  //     ['subscriptions.' + id]: db.FieldValue.delete()\n  // })\n  console.log('delete repo')\n}\n\n"],"sourceRoot":""}